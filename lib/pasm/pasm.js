/* Jison generated parser */
var pasm = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"file":3,"program":4,"line":5,"NEWLINE":6,"EOF":7,"integer":8,"INTEGER":9,"-":10,"immediate":11,"dst_src_expression":12,"directmemaddr":13,":":14,"LABEL_VAR":15,"LABEL_DIRMEM_VAR":16,"memory":17,"[":18,"memory_operations":19,"]":20,"memory_registers":21,"+":22,"*":23,"register":24,"REG_RIP":25,"dst_src_types":26,"label_var":27,"ds_expression":28,"dst":29,"src":30,"label":31,"LABEL":32,"compiler_instruction":33,"processor_instruction":34,"pseudo_instruction":35,"equ":36,"variable":37,"EQU":38,"expression":39,"/":40,"<<":41,">>":42,"(":43,")":44,"$":45,"$$":46,"PSEUDO_TIMES":47,"INSTRUCTION":48,",":49,"size":50,"INSTRUCTION_JUMP":51,"jump_size":52,"CIN_ORG":53,"CIN_BITS":54,"pseudo_operation":55,"STRING":56,"SIZE_8":57,"SIZE_16":58,"SIZE_32":59,"SIZE_64":60,"JUMP_NEAR":61,"JUMP_SHORT":62,"PSEUDO_DB":63,"PSEUDO_DW":64,"PSEUDO_DD":65,"PSEUDO_DQ":66,"PSEUDO_DT":67,"PSEUDO_DDQ":68,"PSEUDO_DO":69,"PSEUDO_RESB":70,"PSEUDO_RESW":71,"PSEUDO_RESD":72,"PSEUDO_RESQ":73,"PSEUDO_REST":74,"PSEUDO_RESDQ":75,"PSEUDO_RESO":76,"REG_AL":77,"REG_CL":78,"REG_DL":79,"REG_BL":80,"REG_AH":81,"REG_CH":82,"REG_DH":83,"REG_BH":84,"REG_AX":85,"REG_CX":86,"REG_DX":87,"REG_BX":88,"REG_SP":89,"REG_BP":90,"REG_SI":91,"REG_DI":92,"REG_EAX":93,"REG_ECX":94,"REG_EDX":95,"REG_EBX":96,"REG_ESP":97,"REG_EBP":98,"REG_ESI":99,"REG_EDI":100,"REG_RAX":101,"REG_RCX":102,"REG_RDX":103,"REG_RBX":104,"REG_RSP":105,"REG_RBP":106,"REG_RSI":107,"REG_RDI":108,"REG_ES":109,"REG_CS":110,"REG_SS":111,"REG_DS":112,"REG_FS":113,"REG_GS":114,"REG_CR0":115,"REG_CR2":116,"REG_CR3":117,"REG_CR4":118,"REG_DR0":119,"REG_DR1":120,"REG_DR2":121,"REG_DR3":122,"REG_DR4":123,"REG_DR5":124,"REG_DR6":125,"REG_CR7":126,"REG_R8B":127,"REG_R9B":128,"REG_R10B":129,"REG_R11B":130,"REG_R12B":131,"REG_R13B":132,"REG_R14B":133,"REG_R15B":134,"REG_R8W":135,"REG_R9W":136,"REG_R10W":137,"REG_R11W":138,"REG_R12W":139,"REG_R13W":140,"REG_R14W":141,"REG_R15W":142,"REG_R8D":143,"REG_R9D":144,"REG_R10D":145,"REG_R11D":146,"REG_R12D":147,"REG_R13D":148,"REG_R14D":149,"REG_R15D":150,"REG_R8":151,"REG_R9":152,"REG_R10":153,"REG_R11":154,"REG_R12":155,"REG_R13":156,"REG_R14":157,"REG_R15":158,"REG_MM0":159,"REG_MM1":160,"REG_MM2":161,"REG_MM3":162,"REG_MM4":163,"REG_MM5":164,"REG_MM6":165,"REG_MM7":166,"REG_XMM0":167,"REG_XMM1":168,"REG_XMM2":169,"REG_XMM3":170,"REG_XMM4":171,"REG_XMM5":172,"REG_XMM6":173,"REG_XMM7":174,"REG_XMM8":175,"REG_XMM9":176,"REG_XMM10":177,"REG_XMM11":178,"REG_XMM12":179,"REG_XMM13":180,"REG_XMM14":181,"REG_XMM15":182,"$accept":0,"$end":1},
terminals_: {2:"error",6:"NEWLINE",7:"EOF",9:"INTEGER",10:"-",14:":",15:"LABEL_VAR",16:"LABEL_DIRMEM_VAR",18:"[",20:"]",22:"+",23:"*",25:"REG_RIP",28:"ds_expression",32:"LABEL",38:"EQU",40:"/",41:"<<",42:">>",43:"(",44:")",45:"$",46:"$$",47:"PSEUDO_TIMES",48:"INSTRUCTION",49:",",51:"INSTRUCTION_JUMP",53:"CIN_ORG",54:"CIN_BITS",56:"STRING",57:"SIZE_8",58:"SIZE_16",59:"SIZE_32",60:"SIZE_64",61:"JUMP_NEAR",62:"JUMP_SHORT",63:"PSEUDO_DB",64:"PSEUDO_DW",65:"PSEUDO_DD",66:"PSEUDO_DQ",67:"PSEUDO_DT",68:"PSEUDO_DDQ",69:"PSEUDO_DO",70:"PSEUDO_RESB",71:"PSEUDO_RESW",72:"PSEUDO_RESD",73:"PSEUDO_RESQ",74:"PSEUDO_REST",75:"PSEUDO_RESDQ",76:"PSEUDO_RESO",77:"REG_AL",78:"REG_CL",79:"REG_DL",80:"REG_BL",81:"REG_AH",82:"REG_CH",83:"REG_DH",84:"REG_BH",85:"REG_AX",86:"REG_CX",87:"REG_DX",88:"REG_BX",89:"REG_SP",90:"REG_BP",91:"REG_SI",92:"REG_DI",93:"REG_EAX",94:"REG_ECX",95:"REG_EDX",96:"REG_EBX",97:"REG_ESP",98:"REG_EBP",99:"REG_ESI",100:"REG_EDI",101:"REG_RAX",102:"REG_RCX",103:"REG_RDX",104:"REG_RBX",105:"REG_RSP",106:"REG_RBP",107:"REG_RSI",108:"REG_RDI",109:"REG_ES",110:"REG_CS",111:"REG_SS",112:"REG_DS",113:"REG_FS",114:"REG_GS",115:"REG_CR0",116:"REG_CR2",117:"REG_CR3",118:"REG_CR4",119:"REG_DR0",120:"REG_DR1",121:"REG_DR2",122:"REG_DR3",123:"REG_DR4",124:"REG_DR5",125:"REG_DR6",126:"REG_CR7",127:"REG_R8B",128:"REG_R9B",129:"REG_R10B",130:"REG_R11B",131:"REG_R12B",132:"REG_R13B",133:"REG_R14B",134:"REG_R15B",135:"REG_R8W",136:"REG_R9W",137:"REG_R10W",138:"REG_R11W",139:"REG_R12W",140:"REG_R13W",141:"REG_R14W",142:"REG_R15W",143:"REG_R8D",144:"REG_R9D",145:"REG_R10D",146:"REG_R11D",147:"REG_R12D",148:"REG_R13D",149:"REG_R14D",150:"REG_R15D",151:"REG_R8",152:"REG_R9",153:"REG_R10",154:"REG_R11",155:"REG_R12",156:"REG_R13",157:"REG_R14",158:"REG_R15",159:"REG_MM0",160:"REG_MM1",161:"REG_MM2",162:"REG_MM3",163:"REG_MM4",164:"REG_MM5",165:"REG_MM6",166:"REG_MM7",167:"REG_XMM0",168:"REG_XMM1",169:"REG_XMM2",170:"REG_XMM3",171:"REG_XMM4",172:"REG_XMM5",173:"REG_XMM6",174:"REG_XMM7",175:"REG_XMM8",176:"REG_XMM9",177:"REG_XMM10",178:"REG_XMM11",179:"REG_XMM12",180:"REG_XMM13",181:"REG_XMM14",182:"REG_XMM15"},
productions_: [0,[3,1],[4,1],[4,1],[4,2],[4,2],[4,2],[4,3],[8,1],[8,2],[11,1],[13,3],[13,3],[13,3],[13,1],[17,3],[19,1],[19,1],[19,1],[19,3],[19,3],[19,5],[21,1],[21,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[29,1],[30,1],[31,1],[27,1],[5,1],[5,1],[5,2],[5,1],[5,2],[5,1],[5,1],[36,3],[36,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,3],[12,1],[12,1],[12,1],[39,3],[39,3],[39,3],[39,1],[39,1],[39,1],[39,1],[35,2],[34,1],[34,4],[34,5],[34,2],[34,2],[34,3],[33,3],[33,3],[37,2],[37,1],[37,3],[37,2],[37,2],[37,3],[37,3],[50,1],[50,1],[50,1],[50,1],[52,1],[52,1],[55,1],[55,1],[55,1],[55,1],[55,1],[55,1],[55,1],[55,1],[55,1],[55,1],[55,1],[55,1],[55,1],[55,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1],[24,1]],
performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {

var $0 = $$.length - 1;
switch (yystate) {
case 1:
      return Opcode.getCode();
    
break;
case 8:
      this.$ = new Int($$[$0])
    
break;
case 9:
      this.$ = new Int('-'+$$[$0])
    
break;
case 10:
      this.$ = { type: 'imm', size: $$[$0].size(), value: $$[$0] }
    
break;
case 11:
      // Direct address
      var value = Opcode.directAddress($$[$0-2],$$[$0]);
      this.$ = { type: 'add', size: Opcode.get('bits')/8+2, value: value }
    
break;
case 12:
      this.$ = { type: 'add', size: Opcode.get('bits')/8+2, value: Opcode.getLabelName($$[$0-2]), label: '---dirmem', label2: Opcode.getLabelName($$[$0]) }      
    
break;
case 13:
      var value = Opcode.directAddress(new Int('0'),$$[$0]);
      this.$ = { type: 'add', size: Opcode.get('bits')/8+2, value: $$[$0], label: '---dirmem', label1: Opcode.getLabelName($$[$0-2]) }            
    
break;
case 14:    
      var value = Opcode.directAddress(new Int('0'),new Int('0'));
      var lab = $$[$0].trim().split(':');
      this.$ = { type: 'add', size: Opcode.get('bits')/8+2, value: value, label: '---dirmem', label1: Opcode.getLabelName(lab[0]), label2: Opcode.getLabelName(lab[1]) }            
    
break;
case 15:
      if(typeof $$[$0-1].disp != "undefined") {
        if($$[$0-1].name == '') {        
          $$[$0-1].name = $$[$0-1].dispString
        } 
        else if ($$[$0-1].name != 'sib' || ($$[$0-1].name == 'sib' && typeof $$[$0-1].reg != "undefined")) {
          $$[$0-1].name = $$[$0-1].name + '+' + $$[$0-1].dispString;
        }
      }    
      this.$ = $$[$0-1]
    
break;
case 16:
      // Name, Sign, Displacement value
      var disp = Opcode.makeDisplacement( { name: '', type: 'mem' }, '', $$[$0] );
      // 64bit mode uses RIP addressing with this opcode instead. So to make plain disp32 we make SIB and add displacement there
      if(Opcode.get('bits') == 64) {
        disp.sib = disp.dispString;
        disp.name = 'sib';
      }      
      this.$ = disp;
    
break;
case 17:
      // Name, Sign, Displacement value
      if(Opcode.get('bits') == 16) {
        dispTmp = new Int('0xFFFF');
      } else {
        dispTmp = new Int('0xFFFFFFFF');
      }
      var disp = Opcode.makeDisplacement( { name: '', type: 'mem' }, '', dispTmp );
      // 64bit mode uses RIP addressing with this opcode instead. So to make plain disp32 we make SIB and add displacement there
      if(Opcode.get('bits') == 64) {
        disp.sib = disp.dispString;
        disp.name = 'sib';
      }
      disp.label = Opcode.getLabelName($$[$0])      
      this.$ = disp;
    
break;
case 18:
      this.$ = { name: $$[$0].name, type: 'mem', reg: $$[$0].name, regSize: $$[$0].size }    
    
break;
case 19:
      // If displacement already added, then add values
      if(typeof $$[$0-2].disp != "undefined" && typeof $$[$0].disp != "undefined") {  
        var val = $$[$0-2].value.add($$[$0].value);  
        this.$ = Opcode.makeDisplacement( $$[$0-2], '+', val ); 
      } 
      else if(typeof $$[$0].reg == "undefined") {                
        this.$ = Opcode.makeDisplacement( $$[$0-2], '+', $$[$0].value );   
      }
      else if(typeof $$[$0-2].reg == "undefined") {
        this.$ = Opcode.makeDisplacement( $$[$0], '+', $$[$0-2].value );   
      }
      else { 
        $$[$0-2].name = $$[$0-2].name + '+' + $$[$0].name;
        this.$ = $$[$0-2];
      }
      // Add label if it did exist
      if(typeof $$[$0].label != "undefined") { this.$.label = $$[$0].label; }
      if(typeof $$[$0-2].label != "undefined") { this.$.label = $$[$0-2].label; }
    
break;
case 20:
      // If displacement already added, then add values
      if(typeof $$[$0-2].disp != "undefined" && typeof $$[$0].disp != "undefined") {  
        var val = $$[$0-2].value.subtract($$[$0].value);  
        if(val.sign < 0) {
          this.$ = Opcode.makeDisplacement( $$[$0-2], '-', val );   
        } else {
          this.$ = Opcode.makeDisplacement( $$[$0-2], '+', val );   
        }        
      } 
      else if(typeof $$[$0].reg == "undefined") {
        this.$ = Opcode.makeDisplacement( $$[$0-2], '-', $$[$0].value );   
      }
      else { 
        pError('invalid effective address');
      }
    
break;
case 21:
      var mul = $$[$0-2].toJSValue();
      if(mul == 2 || mul == 4 || mul == 8) {
        this.$ = { name: 'sib', sib: $$[$0-4].name+'*'+$$[$0-2], reg: $$[$0].name, type: 'mem' } 
      } else {
        pError('wrong multiplier in addressing');
      }
    
break;
case 22:
      this.$ = { name: $$[$0].reg, size: $$[$0].size }
    
break;
case 23:
      if(Opcode.get('bits') != 64) {
        pError('you can use RIP addressing only in 64 bit mode');
      } else {
        this.$ = { name: 'rip' };
      }
    
break;
case 30:
      this.$ = $$[$0];
    
break;
case 31:
      this.$ = $$[$0];
    
break;
case 32:
      Opcode.addLabel(yylineno, $$[$0]);
    
break;
case 33:
      var bits = 16
      if(Opcode.get('bits') > 16) bits = 32
      this.$ = { name: Opcode.getLabelName($$[$0]), type: 'r/i', size: bits/8, value: new Int('0') }
    
break;
case 41:
      Opcode.addLabel( yylineno, $$[$0-2], $$[$0] );
    
break;
case 42:
      Opcode.addLabel( yylineno, $$[$0-2], $$[$0] );
    
break;
case 43: this.$ = $$[$0-2].subtract($$[$0]); 
break;
case 44: this.$ = $$[$0-2].add($$[$0]); 
break;
case 45: this.$ = $$[$0-2].multiply($$[$0]); 
break;
case 46: this.$ = $$[$0-2].divide($$[$0]); 
break;
case 47: this.$ = $$[$0-2].shiftLeft($$[$0]); 
break;
case 48: this.$ = $$[$0-2].shiftRight($$[$0]); 
break;
case 49: this.$ = $$[$0-1]; 
break;
case 50: this.$ = $$[$0]; 
break;
case 51: this.$ = new Int((Opcode.getPos() + Opcode.get('offset')).toString()); 
break;
case 52: this.$ = new Int( Opcode.get('offset').toString() ); 
break;
case 53: this.$ = $$[$0-2].subtract($$[$0]); 
break;
case 54: this.$ = $$[$0-2].add($$[$0]); 
break;
case 55: this.$ = $$[$0-1]; 
break;
case 56: this.$ = $$[$0]; 
break;
case 57: this.$ = new Int( (Opcode.getPos() + Opcode.get('offset')).toString() ); 
break;
case 58: this.$ = new Int( Opcode.get('offset').toString() ); 
break;
case 59: this.$ = Opcode.getLabelValue($$[$0]); 
break;
case 60:
      Opcode.addTimes(yylineno, $$[$0])
    
break;
case 61:
      Opcode.makeOc(yylineno, $$[$0], { type: 'single' })
    
break;
case 62:
      Opcode.makeOc(yylineno, $$[$0-3],$$[$0-2],$$[$0])
    
break;
case 63:
      Opcode.makeOc(yylineno, $$[$0-4],$$[$0-2],$$[$0],$$[$0-3])
    
break;
case 64:
      Opcode.makeOc(yylineno, $$[$0-1],$$[$0])
    
break;
case 65:
      // Conditional jumps and loops default to SHORT
      if($$[$0-1] != 'jmp' && $$[$0-1] != 'jmpf') {
        $$[$0].size = 1;
      }
      Opcode.makeOc(yylineno, $$[$0-1],$$[$0]) 
    
break;
case 66:
      $$[$0].size = $$[$0-1].size/8;
      Opcode.makeOc(yylineno, $$[$0-2],$$[$0]) 
    
break;
case 67:
      Opcode.set('offset',$$[$0-1]);
    
break;
case 68:
      if( $$[$0-1] == 16 || $$[$0-1] == 32 || $$[$0-1]==64 ) {
        Opcode.set('bits',$$[$0-1]);
      } 
      else {
        pError('Bits '+$$[$0-1]+' is invalid. Must be 16,32 or 64.');
      }
    
break;
case 69: 
      Opcode.addVariable(yylineno, $$[$0-1], $$[$0]);
    
break;
case 70:
      Opcode.addVariable(yylineno, null, $$[$0]);
    
break;
case 71:
      Opcode.addVariable(yylineno, $$[$0-2], $$[$0-1]);
      Opcode.addVariableData( yylineno, $$[$0]);
    
break;
case 72:      
      Opcode.addVariable(yylineno, null, $$[$0-1]);
      Opcode.addVariableData( yylineno, $$[$0]);
    
break;
case 73:
      Opcode.addVariableData( yylineno, $$[$0].replace( /['"]/g,'') ); /*"*/
    
break;
case 74:
      Opcode.addVariableData( yylineno, $$[$0]);
    
break;
case 75:
      Opcode.addVariableData( yylineno, $$[$0].replace( /['"]/g,'') ); /*"*/
    
break;
case 76: this.$ = { size: 8 } 
break;
case 77: this.$ = { size: 16 } 
break;
case 78: this.$ = { size: 32 } 
break;
case 79: this.$ = { size: 64 } 
break;
case 80: 
      var bits = 16
      if(Opcode.get('bits') > 16) bits = 32
      this.$ = { size: bits } 
    
break;
case 81:
      this.$ = { size: 8 }
    
break;
case 82: this.$ = { type: 'db', size: 1 } 
break;
case 83: this.$ = { type: 'dw', size: 2 } 
break;
case 84: this.$ = { type: 'dd', size: 4 } 
break;
case 85: this.$ = { type: 'dq', size: 8 } 
break;
case 86: /* not yet implemented */ 
break;
case 87: this.$ = { type: 'ddq', size: 16 } 
break;
case 88: this.$ = { type: 'do', size: 16 } 
break;
case 89: this.$ = { type: 'resb', size: 1 } 
break;
case 90: this.$ = { type: 'resw', size: 2 } 
break;
case 91: this.$ = { type: 'resd', size: 4 } 
break;
case 92: this.$ = { type: 'resq', size: 8 } 
break;
case 93: /* not yet implemented */ 
break;
case 94: this.$ = { type: 'resdq', size: 16 } 
break;
case 95: this.$ = { type: 'reso', size: 16 } 
break;
case 96: this.$ = { reg: 'al', size: 1, num: 0, type: 'reg' } 
break;
case 97: this.$ = { reg: 'cl', size: 1, num: 1, type: 'reg' } 
break;
case 98: this.$ = { reg: 'dl', size: 1, num: 2, type: 'reg' } 
break;
case 99: this.$ = { reg: 'bl', size: 1, num: 3, type: 'reg' } 
break;
case 100: this.$ = { reg: 'ah', size: 1, num: 4, type: 'reg' } 
break;
case 101: this.$ = { reg: 'ch', size: 1, num: 5, type: 'reg' } 
break;
case 102: this.$ = { reg: 'dh', size: 1, num: 6, type: 'reg' } 
break;
case 103: this.$ = { reg: 'bh', size: 1, num: 7, type: 'reg' } 
break;
case 104: this.$ = { reg: 'ax', size: 2, num: 0, type: 'reg' } 
break;
case 105: this.$ = { reg: 'cx', size: 2, num: 1, type: 'reg' } 
break;
case 106: this.$ = { reg: 'dx', size: 2, num: 2, type: 'reg' } 
break;
case 107: this.$ = { reg: 'bx', size: 2, num: 3, type: 'reg' } 
break;
case 108: this.$ = { reg: 'sp', size: 2, num: 4, type: 'reg' } 
break;
case 109: this.$ = { reg: 'bp', size: 2, num: 5, type: 'reg' } 
break;
case 110: this.$ = { reg: 'si', size: 2, num: 6, type: 'reg' } 
break;
case 111: this.$ = { reg: 'di', size: 2, num: 7, type: 'reg' } 
break;
case 112: this.$ = { reg: 'eax', size: 4, num: 0, type: 'reg' } 
break;
case 113: this.$ = { reg: 'ecx', size: 4, num: 1, type: 'reg' } 
break;
case 114: this.$ = { reg: 'edx', size: 4, num: 2, type: 'reg' } 
break;
case 115: this.$ = { reg: 'ebx', size: 4, num: 3, type: 'reg' } 
break;
case 116: this.$ = { reg: 'esp', size: 4, num: 4, type: 'reg' } 
break;
case 117: this.$ = { reg: 'ebp', size: 4, num: 5, type: 'reg' } 
break;
case 118: this.$ = { reg: 'esi', size: 4, num: 6, type: 'reg' } 
break;
case 119: this.$ = { reg: 'edi', size: 4, num: 7, type: 'reg' } 
break;
case 120: this.$ = { reg: 'rax', size: 8, num: 0, type: 'reg' } 
break;
case 121: this.$ = { reg: 'rcx', size: 8, num: 1, type: 'reg' } 
break;
case 122: this.$ = { reg: 'rdx', size: 8, num: 2, type: 'reg' } 
break;
case 123: this.$ = { reg: 'rbx', size: 8, num: 3, type: 'reg' } 
break;
case 124: this.$ = { reg: 'rsp', size: 8, num: 4, type: 'reg' } 
break;
case 125: this.$ = { reg: 'rbp', size: 8, num: 5, type: 'reg' } 
break;
case 126: this.$ = { reg: 'rsi', size: 8, num: 6, type: 'reg' } 
break;
case 127: this.$ = { reg: 'rdi', size: 8, num: 7, type: 'reg' } 
break;
case 128: this.$ = { reg: 'es', size: 2, num: 0, type: 'seg' } 
break;
case 129: this.$ = { reg: 'cs', size: 2, num: 1, type: 'seg' } 
break;
case 130: this.$ = { reg: 'ss', size: 2, num: 2, type: 'seg' } 
break;
case 131: this.$ = { reg: 'ds', size: 2, num: 3, type: 'seg' } 
break;
case 132: this.$ = { reg: 'fs', size: 2, num: 4, type: 'seg' } 
break;
case 133: this.$ = { reg: 'gs', size: 2, num: 5, type: 'seg' } 
break;
case 134: this.$ = { reg: 'cr0', size: 4, size_64: 8, num: 0, type: 'crl' } 
break;
case 135: this.$ = { reg: 'cr2', size: 4, size_64: 8, num: 2, type: 'crl' } 
break;
case 136: this.$ = { reg: 'cr3', size: 4, size_64: 8, num: 3, type: 'crl' } 
break;
case 137: this.$ = { reg: 'cr4', size: 4, size_64: 8, num: 4, type: 'crl' } 
break;
case 138: this.$ = { reg: 'dr0', size: 4, size_64: 8, num: 0, type: 'dbg' } 
break;
case 139: this.$ = { reg: 'dr1', size: 4, size_64: 8, num: 1, type: 'dbg' } 
break;
case 140: this.$ = { reg: 'dr2', size: 4, size_64: 8, num: 2, type: 'dbg' } 
break;
case 141: this.$ = { reg: 'dr3', size: 4, size_64: 8, num: 3, type: 'dbg' } 
break;
case 142: this.$ = { reg: 'dr4', size: 4, size_64: 8, num: 4, type: 'dbg' } 
break;
case 143: this.$ = { reg: 'dr5', size: 4, size_64: 8, num: 5, type: 'dbg' } 
break;
case 144: this.$ = { reg: 'dr6', size: 4, size_64: 8, num: 6, type: 'dbg' } 
break;
case 145: this.$ = { reg: 'dr7', size: 4, size_64: 8, num: 7, type: 'dbg' } 
break;
case 146: this.$ = { reg: 'r8b', size: 1, num: 0, type: 'reg', rex: 'r' } 
break;
case 147: this.$ = { reg: 'r9b', size: 1, num: 1, type: 'reg', rex: 'r' } 
break;
case 148: this.$ = { reg: 'r10b', size: 1, num: 2, type: 'reg', rex: 'r' } 
break;
case 149: this.$ = { reg: 'r11b', size: 1, num: 3, type: 'reg', rex: 'r' } 
break;
case 150: this.$ = { reg: 'r12b', size: 1, num: 4, type: 'reg', rex: 'r' } 
break;
case 151: this.$ = { reg: 'r13b', size: 1, num: 5, type: 'reg', rex: 'r' } 
break;
case 152: this.$ = { reg: 'r14b', size: 1, num: 6, type: 'reg', rex: 'r' } 
break;
case 153: this.$ = { reg: 'r15b', size: 1, num: 7, type: 'reg', rex: 'r' } 
break;
case 154: this.$ = { reg: 'r8w', size: 2, num: 0, type: 'reg', rex: 'r' } 
break;
case 155: this.$ = { reg: 'r9w', size: 2, num: 1, type: 'reg', rex: 'r' } 
break;
case 156: this.$ = { reg: 'r10w', size: 2, num: 2, type: 'reg', rex: 'r' } 
break;
case 157: this.$ = { reg: 'r11', size: 2, num: 3, type: 'reg', rex: 'r' } 
break;
case 158: this.$ = { reg: 'r12w', size: 2, num: 4, type: 'reg', rex: 'r' } 
break;
case 159: this.$ = { reg: 'r13w', size: 2, num: 5, type: 'reg', rex: 'r' } 
break;
case 160: this.$ = { reg: 'r14w', size: 2, num: 6, type: 'reg', rex: 'r' } 
break;
case 161: this.$ = { reg: 'r15w', size: 2, num: 7, type: 'reg', rex: 'r' } 
break;
case 162: this.$ = { reg: 'r8d', size: 4, num: 0, type: 'reg', rex: 'r' } 
break;
case 163: this.$ = { reg: 'r9d', size: 4, num: 1, type: 'reg', rex: 'r' } 
break;
case 164: this.$ = { reg: 'r10d', size: 4, num: 2, type: 'reg', rex: 'r' } 
break;
case 165: this.$ = { reg: 'r11d', size: 4, num: 3, type: 'reg', rex: 'r' } 
break;
case 166: this.$ = { reg: 'r12d', size: 4, num: 4, type: 'reg', rex: 'r' } 
break;
case 167: this.$ = { reg: 'r13d', size: 4, num: 5, type: 'reg', rex: 'r' } 
break;
case 168: this.$ = { reg: 'r14d', size: 4, num: 6, type: 'reg', rex: 'r' } 
break;
case 169: this.$ = { reg: 'r15d', size: 4, num: 7, type: 'reg', rex: 'r' } 
break;
case 170: this.$ = { reg: 'r8', size: 8, num: 0, type: 'reg', rex: 'r' } 
break;
case 171: this.$ = { reg: 'r9', size: 8, num: 1, type: 'reg', rex: 'r' } 
break;
case 172: this.$ = { reg: 'r10', size: 8, num: 2, type: 'reg', rex: 'r' } 
break;
case 173: this.$ = { reg: 'r11', size: 8, num: 3, type: 'reg', rex: 'r' } 
break;
case 174: this.$ = { reg: 'r12', size: 8, num: 4, type: 'reg', rex: 'r' } 
break;
case 175: this.$ = { reg: 'r13', size: 8, num: 5, type: 'reg', rex: 'r' } 
break;
case 176: this.$ = { reg: 'r14', size: 8, num: 6, type: 'reg', rex: 'r' } 
break;
case 177: this.$ = { reg: 'r15', size: 8, num: 7, type: 'reg', rex: 'r' } 
break;
case 178: this.$ = { reg: 'mm0', size: 8, num: 0, type: 'reg' } 
break;
case 179: this.$ = { reg: 'mm1', size: 8, num: 1, type: 'reg' } 
break;
case 180: this.$ = { reg: 'mm2', size: 8, num: 2, type: 'reg' } 
break;
case 181: this.$ = { reg: 'mm3', size: 8, num: 3, type: 'reg' } 
break;
case 182: this.$ = { reg: 'mm4', size: 8, num: 4, type: 'reg' } 
break;
case 183: this.$ = { reg: 'mm5', size: 8, num: 5, type: 'reg' } 
break;
case 184: this.$ = { reg: 'mm6', size: 8, num: 6, type: 'reg' } 
break;
case 185: this.$ = { reg: 'mm7', size: 8, num: 7, type: 'reg' } 
break;
case 186: this.$ = { reg: 'xmm8', size: 16, num: 0, type: 'reg' } 
break;
case 187: this.$ = { reg: 'xmm9', size: 16, num: 1, type: 'reg' } 
break;
case 188: this.$ = { reg: 'xmm10', size: 16, num: 2, type: 'reg' } 
break;
case 189: this.$ = { reg: 'xmm11', size: 16, num: 3, type: 'reg' } 
break;
case 190: this.$ = { reg: 'xmm12', size: 16, num: 4, type: 'reg' } 
break;
case 191: this.$ = { reg: 'xmm13', size: 16, num: 5, type: 'reg' } 
break;
case 192: this.$ = { reg: 'xmm14', size: 16, num: 6, type: 'reg' } 
break;
case 193: this.$ = { reg: 'xmm15', size: 16, num: 7, type: 'reg' } 
break;
case 194: this.$ = { reg: 'xmm8', size: 16, num: 0, type: 'reg', rex: 'r' } 
break;
case 195: this.$ = { reg: 'xmm9', size: 16, num: 1, type: 'reg', rex: 'r' } 
break;
case 196: this.$ = { reg: 'xmm10', size: 16, num: 2, type: 'reg', rex: 'r' } 
break;
case 197: this.$ = { reg: 'xmm11', size: 16, num: 3, type: 'reg', rex: 'r' } 
break;
case 198: this.$ = { reg: 'xmm12', size: 16, num: 4, type: 'reg', rex: 'r' } 
break;
case 199: this.$ = { reg: 'xmm13', size: 16, num: 5, type: 'reg', rex: 'r' } 
break;
case 200: this.$ = { reg: 'xmm14', size: 16, num: 6, type: 'reg', rex: 'r' } 
break;
case 201: this.$ = { reg: 'xmm15', size: 16, num: 7, type: 'reg', rex: 'r' } 
break;
}
},
table: [{3:1,4:2,5:3,6:[1,4],15:[1,17],31:8,32:[1,16],33:5,34:6,35:7,36:9,37:10,47:[1,15],48:[1,13],51:[1,14],53:[1,11],54:[1,12],55:18,63:[1,19],64:[1,20],65:[1,21],66:[1,22],67:[1,23],68:[1,24],69:[1,25],70:[1,26],71:[1,27],72:[1,28],73:[1,29],74:[1,30],75:[1,31],76:[1,32]},{1:[3]},{1:[2,1],6:[1,34],7:[1,33]},{1:[2,2],6:[2,2],7:[2,2]},{1:[2,3],5:35,6:[2,3],7:[2,3],15:[1,17],31:8,32:[1,16],33:5,34:6,35:7,36:9,37:10,47:[1,15],48:[1,13],51:[1,14],53:[1,11],54:[1,12],55:18,63:[1,19],64:[1,20],65:[1,21],66:[1,22],67:[1,23],68:[1,24],69:[1,25],70:[1,26],71:[1,27],72:[1,28],73:[1,29],74:[1,30],75:[1,31],76:[1,32]},{1:[2,34],6:[2,34],7:[2,34]},{1:[2,35],6:[2,35],7:[2,35]},{5:36,15:[1,17],31:8,32:[1,16],33:5,34:6,35:7,36:9,37:10,47:[1,15],48:[1,13],51:[1,14],53:[1,11],54:[1,12],55:18,63:[1,19],64:[1,20],65:[1,21],66:[1,22],67:[1,23],68:[1,24],69:[1,25],70:[1,26],71:[1,27],72:[1,28],73:[1,29],74:[1,30],75:[1,31],76:[1,32]},{1:[2,37],5:37,6:[2,37],7:[2,37],15:[1,17],31:8,32:[1,16],33:5,34:6,35:7,36:9,37:10,47:[1,15],48:[1,13],51:[1,14],53:[1,11],54:[1,12],55:18,63:[1,19],64:[1,20],65:[1,21],66:[1,22],67:[1,23],68:[1,24],69:[1,25],70:[1,26],71:[1,27],72:[1,28],73:[1,29],74:[1,30],75:[1,31],76:[1,32]},{1:[2,39],6:[2,39],7:[2,39]},{1:[2,40],6:[2,40],7:[2,40],49:[1,39],56:[1,38]},{8:40,9:[1,41],10:[1,42]},{8:43,9:[1,41],10:[1,42]},{1:[2,61],6:[2,61],7:[2,61],8:165,9:[1,41],10:[1,42],11:53,12:164,13:54,15:[1,166],16:[1,167],17:52,18:[1,163],24:51,26:46,27:55,28:[1,56],29:44,43:[1,168],45:[1,169],46:[1,170],50:45,57:[1,47],58:[1,48],59:[1,49],60:[1,50],77:[1,57],78:[1,58],79:[1,59],80:[1,60],81:[1,61],82:[1,62],83:[1,63],84:[1,64],85:[1,65],86:[1,66],87:[1,67],88:[1,68],89:[1,69],90:[1,70],91:[1,71],92:[1,72],93:[1,73],94:[1,74],95:[1,75],96:[1,76],97:[1,77],98:[1,78],99:[1,79],100:[1,80],101:[1,81],102:[1,82],103:[1,83],104:[1,84],105:[1,85],106:[1,86],107:[1,87],108:[1,88],109:[1,89],110:[1,90],111:[1,91],112:[1,92],113:[1,93],114:[1,94],115:[1,95],116:[1,96],117:[1,97],118:[1,98],119:[1,99],120:[1,100],121:[1,101],122:[1,102],123:[1,103],124:[1,104],125:[1,105],126:[1,106],127:[1,107],128:[1,108],129:[1,109],130:[1,110],131:[1,111],132:[1,112],133:[1,113],134:[1,114],135:[1,115],136:[1,116],137:[1,117],138:[1,118],139:[1,119],140:[1,120],141:[1,121],142:[1,122],143:[1,123],144:[1,124],145:[1,125],146:[1,126],147:[1,127],148:[1,128],149:[1,129],150:[1,130],151:[1,131],152:[1,132],153:[1,133],154:[1,134],155:[1,135],156:[1,136],157:[1,137],158:[1,138],159:[1,139],160:[1,140],161:[1,141],162:[1,142],163:[1,143],164:[1,144],165:[1,145],166:[1,146],167:[1,147],168:[1,148],169:[1,149],170:[1,150],171:[1,151],172:[1,152],173:[1,153],174:[1,154],175:[1,155],176:[1,156],177:[1,157],178:[1,158],179:[1,159],180:[1,160],181:[1,161],182:[1,162]},{8:165,9:[1,41],10:[1,42],11:53,12:164,13:54,15:[1,166],16:[1,167],17:52,18:[1,163],24:51,26:46,27:55,28:[1,56],29:171,43:[1,168],45:[1,169],46:[1,170],52:172,61:[1,173],62:[1,174],77:[1,57],78:[1,58],79:[1,59],80:[1,60],81:[1,61],82:[1,62],83:[1,63],84:[1,64],85:[1,65],86:[1,66],87:[1,67],88:[1,68],89:[1,69],90:[1,70],91:[1,71],92:[1,72],93:[1,73],94:[1,74],95:[1,75],96:[1,76],97:[1,77],98:[1,78],99:[1,79],100:[1,80],101:[1,81],102:[1,82],103:[1,83],104:[1,84],105:[1,85],106:[1,86],107:[1,87],108:[1,88],109:[1,89],110:[1,90],111:[1,91],112:[1,92],113:[1,93],114:[1,94],115:[1,95],116:[1,96],117:[1,97],118:[1,98],119:[1,99],120:[1,100],121:[1,101],122:[1,102],123:[1,103],124:[1,104],125:[1,105],126:[1,106],127:[1,107],128:[1,108],129:[1,109],130:[1,110],131:[1,111],132:[1,112],133:[1,113],134:[1,114],135:[1,115],136:[1,116],137:[1,117],138:[1,118],139:[1,119],140:[1,120],141:[1,121],142:[1,122],143:[1,123],144:[1,124],145:[1,125],146:[1,126],147:[1,127],148:[1,128],149:[1,129],150:[1,130],151:[1,131],152:[1,132],153:[1,133],154:[1,134],155:[1,135],156:[1,136],157:[1,137],158:[1,138],159:[1,139],160:[1,140],161:[1,141],162:[1,142],163:[1,143],164:[1,144],165:[1,145],166:[1,146],167:[1,147],168:[1,148],169:[1,149],170:[1,150],171:[1,151],172:[1,152],173:[1,153],174:[1,154],175:[1,155],176:[1,156],177:[1,157],178:[1,158],179:[1,159],180:[1,160],181:[1,161],182:[1,162]},{8:177,9:[1,41],10:[1,42],15:[1,180],39:175,43:[1,176],45:[1,178],46:[1,179]},{1:[2,32],6:[2,32],7:[2,32],15:[2,32],32:[2,32],38:[1,181],47:[2,32],48:[2,32],51:[2,32],53:[2,32],54:[2,32],63:[2,32],64:[2,32],65:[2,32],66:[2,32],67:[2,32],68:[2,32],69:[2,32],70:[2,32],71:[2,32],72:[2,32],73:[2,32],74:[2,32],75:[2,32],76:[2,32]},{38:[1,182],55:183,63:[1,19],64:[1,20],65:[1,21],66:[1,22],67:[1,23],68:[1,24],69:[1,25],70:[1,26],71:[1,27],72:[1,28],73:[1,29],74:[1,30],75:[1,31],76:[1,32]},{1:[2,70],6:[2,70],7:[2,70],8:177,9:[1,41],10:[1,42],15:[1,180],39:184,43:[1,176],45:[1,178],46:[1,179],49:[2,70],56:[2,70]},{1:[2,82],6:[2,82],7:[2,82],9:[2,82],10:[2,82],15:[2,82],43:[2,82],45:[2,82],46:[2,82],49:[2,82],56:[2,82]},{1:[2,83],6:[2,83],7:[2,83],9:[2,83],10:[2,83],15:[2,83],43:[2,83],45:[2,83],46:[2,83],49:[2,83],56:[2,83]},{1:[2,84],6:[2,84],7:[2,84],9:[2,84],10:[2,84],15:[2,84],43:[2,84],45:[2,84],46:[2,84],49:[2,84],56:[2,84]},{1:[2,85],6:[2,85],7:[2,85],9:[2,85],10:[2,85],15:[2,85],43:[2,85],45:[2,85],46:[2,85],49:[2,85],56:[2,85]},{1:[2,86],6:[2,86],7:[2,86],9:[2,86],10:[2,86],15:[2,86],43:[2,86],45:[2,86],46:[2,86],49:[2,86],56:[2,86]},{1:[2,87],6:[2,87],7:[2,87],9:[2,87],10:[2,87],15:[2,87],43:[2,87],45:[2,87],46:[2,87],49:[2,87],56:[2,87]},{1:[2,88],6:[2,88],7:[2,88],9:[2,88],10:[2,88],15:[2,88],43:[2,88],45:[2,88],46:[2,88],49:[2,88],56:[2,88]},{1:[2,89],6:[2,89],7:[2,89],9:[2,89],10:[2,89],15:[2,89],43:[2,89],45:[2,89],46:[2,89],49:[2,89],56:[2,89]},{1:[2,90],6:[2,90],7:[2,90],9:[2,90],10:[2,90],15:[2,90],43:[2,90],45:[2,90],46:[2,90],49:[2,90],56:[2,90]},{1:[2,91],6:[2,91],7:[2,91],9:[2,91],10:[2,91],15:[2,91],43:[2,91],45:[2,91],46:[2,91],49:[2,91],56:[2,91]},{1:[2,92],6:[2,92],7:[2,92],9:[2,92],10:[2,92],15:[2,92],43:[2,92],45:[2,92],46:[2,92],49:[2,92],56:[2,92]},{1:[2,93],6:[2,93],7:[2,93],9:[2,93],10:[2,93],15:[2,93],43:[2,93],45:[2,93],46:[2,93],49:[2,93],56:[2,93]},{1:[2,94],6:[2,94],7:[2,94],9:[2,94],10:[2,94],15:[2,94],43:[2,94],45:[2,94],46:[2,94],49:[2,94],56:[2,94]},{1:[2,95],6:[2,95],7:[2,95],9:[2,95],10:[2,95],15:[2,95],43:[2,95],45:[2,95],46:[2,95],49:[2,95],56:[2,95]},{1:[2,5],6:[2,5],7:[2,5]},{1:[2,6],5:185,6:[2,6],7:[2,6],15:[1,17],31:8,32:[1,16],33:5,34:6,35:7,36:9,37:10,47:[1,15],48:[1,13],51:[1,14],53:[1,11],54:[1,12],55:18,63:[1,19],64:[1,20],65:[1,21],66:[1,22],67:[1,23],68:[1,24],69:[1,25],70:[1,26],71:[1,27],72:[1,28],73:[1,29],74:[1,30],75:[1,31],76:[1,32]},{1:[2,4],6:[2,4],7:[2,4]},{1:[2,36],6:[2,36],7:[2,36]},{1:[2,38],6:[2,38],7:[2,38]},{1:[2,73],6:[2,73],7:[2,73],49:[2,73],56:[2,73]},{8:186,9:[1,41],10:[1,42],56:[1,187]},{20:[1,188]},{1:[2,8],6:[2,8],7:[2,8],10:[2,8],14:[2,8],15:[2,8],20:[2,8],22:[2,8],23:[2,8],32:[2,8],40:[2,8],41:[2,8],42:[2,8],44:[2,8],47:[2,8],48:[2,8],49:[2,8],51:[2,8],53:[2,8],54:[2,8],56:[2,8],63:[2,8],64:[2,8],65:[2,8],66:[2,8],67:[2,8],68:[2,8],69:[2,8],70:[2,8],71:[2,8],72:[2,8],73:[2,8],74:[2,8],75:[2,8],76:[2,8]},{9:[1,189]},{20:[1,190]},{1:[2,64],6:[2,64],7:[2,64],49:[1,191]},{8:165,9:[1,41],10:[1,42],11:53,12:164,13:54,15:[1,166],16:[1,167],17:52,18:[1,163],24:51,26:46,27:55,28:[1,56],29:192,43:[1,168],45:[1,169],46:[1,170],77:[1,57],78:[1,58],79:[1,59],80:[1,60],81:[1,61],82:[1,62],83:[1,63],84:[1,64],85:[1,65],86:[1,66],87:[1,67],88:[1,68],89:[1,69],90:[1,70],91:[1,71],92:[1,72],93:[1,73],94:[1,74],95:[1,75],96:[1,76],97:[1,77],98:[1,78],99:[1,79],100:[1,80],101:[1,81],102:[1,82],103:[1,83],104:[1,84],105:[1,85],106:[1,86],107:[1,87],108:[1,88],109:[1,89],110:[1,90],111:[1,91],112:[1,92],113:[1,93],114:[1,94],115:[1,95],116:[1,96],117:[1,97],118:[1,98],119:[1,99],120:[1,100],121:[1,101],122:[1,102],123:[1,103],124:[1,104],125:[1,105],126:[1,106],127:[1,107],128:[1,108],129:[1,109],130:[1,110],131:[1,111],132:[1,112],133:[1,113],134:[1,114],135:[1,115],136:[1,116],137:[1,117],138:[1,118],139:[1,119],140:[1,120],141:[1,121],142:[1,122],143:[1,123],144:[1,124],145:[1,125],146:[1,126],147:[1,127],148:[1,128],149:[1,129],150:[1,130],151:[1,131],152:[1,132],153:[1,133],154:[1,134],155:[1,135],156:[1,136],157:[1,137],158:[1,138],159:[1,139],160:[1,140],161:[1,141],162:[1,142],163:[1,143],164:[1,144],165:[1,145],166:[1,146],167:[1,147],168:[1,148],169:[1,149],170:[1,150],171:[1,151],172:[1,152],173:[1,153],174:[1,154],175:[1,155],176:[1,156],177:[1,157],178:[1,158],179:[1,159],180:[1,160],181:[1,161],182:[1,162]},{1:[2,30],6:[2,30],7:[2,30],49:[2,30]},{9:[2,76],10:[2,76],15:[2,76],16:[2,76],18:[2,76],28:[2,76],43:[2,76],45:[2,76],46:[2,76],77:[2,76],78:[2,76],79:[2,76],80:[2,76],81:[2,76],82:[2,76],83:[2,76],84:[2,76],85:[2,76],86:[2,76],87:[2,76],88:[2,76],89:[2,76],90:[2,76],91:[2,76],92:[2,76],93:[2,76],94:[2,76],95:[2,76],96:[2,76],97:[2,76],98:[2,76],99:[2,76],100:[2,76],101:[2,76],102:[2,76],103:[2,76],104:[2,76],105:[2,76],106:[2,76],107:[2,76],108:[2,76],109:[2,76],110:[2,76],111:[2,76],112:[2,76],113:[2,76],114:[2,76],115:[2,76],116:[2,76],117:[2,76],118:[2,76],119:[2,76],120:[2,76],121:[2,76],122:[2,76],123:[2,76],124:[2,76],125:[2,76],126:[2,76],127:[2,76],128:[2,76],129:[2,76],130:[2,76],131:[2,76],132:[2,76],133:[2,76],134:[2,76],135:[2,76],136:[2,76],137:[2,76],138:[2,76],139:[2,76],140:[2,76],141:[2,76],142:[2,76],143:[2,76],144:[2,76],145:[2,76],146:[2,76],147:[2,76],148:[2,76],149:[2,76],150:[2,76],151:[2,76],152:[2,76],153:[2,76],154:[2,76],155:[2,76],156:[2,76],157:[2,76],158:[2,76],159:[2,76],160:[2,76],161:[2,76],162:[2,76],163:[2,76],164:[2,76],165:[2,76],166:[2,76],167:[2,76],168:[2,76],169:[2,76],170:[2,76],171:[2,76],172:[2,76],173:[2,76],174:[2,76],175:[2,76],176:[2,76],177:[2,76],178:[2,76],179:[2,76],180:[2,76],181:[2,76],182:[2,76]},{9:[2,77],10:[2,77],15:[2,77],16:[2,77],18:[2,77],28:[2,77],43:[2,77],45:[2,77],46:[2,77],77:[2,77],78:[2,77],79:[2,77],80:[2,77],81:[2,77],82:[2,77],83:[2,77],84:[2,77],85:[2,77],86:[2,77],87:[2,77],88:[2,77],89:[2,77],90:[2,77],91:[2,77],92:[2,77],93:[2,77],94:[2,77],95:[2,77],96:[2,77],97:[2,77],98:[2,77],99:[2,77],100:[2,77],101:[2,77],102:[2,77],103:[2,77],104:[2,77],105:[2,77],106:[2,77],107:[2,77],108:[2,77],109:[2,77],110:[2,77],111:[2,77],112:[2,77],113:[2,77],114:[2,77],115:[2,77],116:[2,77],117:[2,77],118:[2,77],119:[2,77],120:[2,77],121:[2,77],122:[2,77],123:[2,77],124:[2,77],125:[2,77],126:[2,77],127:[2,77],128:[2,77],129:[2,77],130:[2,77],131:[2,77],132:[2,77],133:[2,77],134:[2,77],135:[2,77],136:[2,77],137:[2,77],138:[2,77],139:[2,77],140:[2,77],141:[2,77],142:[2,77],143:[2,77],144:[2,77],145:[2,77],146:[2,77],147:[2,77],148:[2,77],149:[2,77],150:[2,77],151:[2,77],152:[2,77],153:[2,77],154:[2,77],155:[2,77],156:[2,77],157:[2,77],158:[2,77],159:[2,77],160:[2,77],161:[2,77],162:[2,77],163:[2,77],164:[2,77],165:[2,77],166:[2,77],167:[2,77],168:[2,77],169:[2,77],170:[2,77],171:[2,77],172:[2,77],173:[2,77],174:[2,77],175:[2,77],176:[2,77],177:[2,77],178:[2,77],179:[2,77],180:[2,77],181:[2,77],182:[2,77]},{9:[2,78],10:[2,78],15:[2,78],16:[2,78],18:[2,78],28:[2,78],43:[2,78],45:[2,78],46:[2,78],77:[2,78],78:[2,78],79:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78],86:[2,78],87:[2,78],88:[2,78],89:[2,78],90:[2,78],91:[2,78],92:[2,78],93:[2,78],94:[2,78],95:[2,78],96:[2,78],97:[2,78],98:[2,78],99:[2,78],100:[2,78],101:[2,78],102:[2,78],103:[2,78],104:[2,78],105:[2,78],106:[2,78],107:[2,78],108:[2,78],109:[2,78],110:[2,78],111:[2,78],112:[2,78],113:[2,78],114:[2,78],115:[2,78],116:[2,78],117:[2,78],118:[2,78],119:[2,78],120:[2,78],121:[2,78],122:[2,78],123:[2,78],124:[2,78],125:[2,78],126:[2,78],127:[2,78],128:[2,78],129:[2,78],130:[2,78],131:[2,78],132:[2,78],133:[2,78],134:[2,78],135:[2,78],136:[2,78],137:[2,78],138:[2,78],139:[2,78],140:[2,78],141:[2,78],142:[2,78],143:[2,78],144:[2,78],145:[2,78],146:[2,78],147:[2,78],148:[2,78],149:[2,78],150:[2,78],151:[2,78],152:[2,78],153:[2,78],154:[2,78],155:[2,78],156:[2,78],157:[2,78],158:[2,78],159:[2,78],160:[2,78],161:[2,78],162:[2,78],163:[2,78],164:[2,78],165:[2,78],166:[2,78],167:[2,78],168:[2,78],169:[2,78],170:[2,78],171:[2,78],172:[2,78],173:[2,78],174:[2,78],175:[2,78],176:[2,78],177:[2,78],178:[2,78],179:[2,78],180:[2,78],181:[2,78],182:[2,78]},{9:[2,79],10:[2,79],15:[2,79],16:[2,79],18:[2,79],28:[2,79],43:[2,79],45:[2,79],46:[2,79],77:[2,79],78:[2,79],79:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79],86:[2,79],87:[2,79],88:[2,79],89:[2,79],90:[2,79],91:[2,79],92:[2,79],93:[2,79],94:[2,79],95:[2,79],96:[2,79],97:[2,79],98:[2,79],99:[2,79],100:[2,79],101:[2,79],102:[2,79],103:[2,79],104:[2,79],105:[2,79],106:[2,79],107:[2,79],108:[2,79],109:[2,79],110:[2,79],111:[2,79],112:[2,79],113:[2,79],114:[2,79],115:[2,79],116:[2,79],117:[2,79],118:[2,79],119:[2,79],120:[2,79],121:[2,79],122:[2,79],123:[2,79],124:[2,79],125:[2,79],126:[2,79],127:[2,79],128:[2,79],129:[2,79],130:[2,79],131:[2,79],132:[2,79],133:[2,79],134:[2,79],135:[2,79],136:[2,79],137:[2,79],138:[2,79],139:[2,79],140:[2,79],141:[2,79],142:[2,79],143:[2,79],144:[2,79],145:[2,79],146:[2,79],147:[2,79],148:[2,79],149:[2,79],150:[2,79],151:[2,79],152:[2,79],153:[2,79],154:[2,79],155:[2,79],156:[2,79],157:[2,79],158:[2,79],159:[2,79],160:[2,79],161:[2,79],162:[2,79],163:[2,79],164:[2,79],165:[2,79],166:[2,79],167:[2,79],168:[2,79],169:[2,79],170:[2,79],171:[2,79],172:[2,79],173:[2,79],174:[2,79],175:[2,79],176:[2,79],177:[2,79],178:[2,79],179:[2,79],180:[2,79],181:[2,79],182:[2,79]},{1:[2,24],6:[2,24],7:[2,24],49:[2,24]},{1:[2,25],6:[2,25],7:[2,25],49:[2,25]},{1:[2,26],6:[2,26],7:[2,26],49:[2,26]},{1:[2,27],6:[2,27],7:[2,27],49:[2,27]},{1:[2,28],6:[2,28],7:[2,28],49:[2,28]},{1:[2,29],6:[2,29],7:[2,29],49:[2,29]},{1:[2,96],6:[2,96],7:[2,96],10:[2,96],20:[2,96],22:[2,96],23:[2,96],49:[2,96]},{1:[2,97],6:[2,97],7:[2,97],10:[2,97],20:[2,97],22:[2,97],23:[2,97],49:[2,97]},{1:[2,98],6:[2,98],7:[2,98],10:[2,98],20:[2,98],22:[2,98],23:[2,98],49:[2,98]},{1:[2,99],6:[2,99],7:[2,99],10:[2,99],20:[2,99],22:[2,99],23:[2,99],49:[2,99]},{1:[2,100],6:[2,100],7:[2,100],10:[2,100],20:[2,100],22:[2,100],23:[2,100],49:[2,100]},{1:[2,101],6:[2,101],7:[2,101],10:[2,101],20:[2,101],22:[2,101],23:[2,101],49:[2,101]},{1:[2,102],6:[2,102],7:[2,102],10:[2,102],20:[2,102],22:[2,102],23:[2,102],49:[2,102]},{1:[2,103],6:[2,103],7:[2,103],10:[2,103],20:[2,103],22:[2,103],23:[2,103],49:[2,103]},{1:[2,104],6:[2,104],7:[2,104],10:[2,104],20:[2,104],22:[2,104],23:[2,104],49:[2,104]},{1:[2,105],6:[2,105],7:[2,105],10:[2,105],20:[2,105],22:[2,105],23:[2,105],49:[2,105]},{1:[2,106],6:[2,106],7:[2,106],10:[2,106],20:[2,106],22:[2,106],23:[2,106],49:[2,106]},{1:[2,107],6:[2,107],7:[2,107],10:[2,107],20:[2,107],22:[2,107],23:[2,107],49:[2,107]},{1:[2,108],6:[2,108],7:[2,108],10:[2,108],20:[2,108],22:[2,108],23:[2,108],49:[2,108]},{1:[2,109],6:[2,109],7:[2,109],10:[2,109],20:[2,109],22:[2,109],23:[2,109],49:[2,109]},{1:[2,110],6:[2,110],7:[2,110],10:[2,110],20:[2,110],22:[2,110],23:[2,110],49:[2,110]},{1:[2,111],6:[2,111],7:[2,111],10:[2,111],20:[2,111],22:[2,111],23:[2,111],49:[2,111]},{1:[2,112],6:[2,112],7:[2,112],10:[2,112],20:[2,112],22:[2,112],23:[2,112],49:[2,112]},{1:[2,113],6:[2,113],7:[2,113],10:[2,113],20:[2,113],22:[2,113],23:[2,113],49:[2,113]},{1:[2,114],6:[2,114],7:[2,114],10:[2,114],20:[2,114],22:[2,114],23:[2,114],49:[2,114]},{1:[2,115],6:[2,115],7:[2,115],10:[2,115],20:[2,115],22:[2,115],23:[2,115],49:[2,115]},{1:[2,116],6:[2,116],7:[2,116],10:[2,116],20:[2,116],22:[2,116],23:[2,116],49:[2,116]},{1:[2,117],6:[2,117],7:[2,117],10:[2,117],20:[2,117],22:[2,117],23:[2,117],49:[2,117]},{1:[2,118],6:[2,118],7:[2,118],10:[2,118],20:[2,118],22:[2,118],23:[2,118],49:[2,118]},{1:[2,119],6:[2,119],7:[2,119],10:[2,119],20:[2,119],22:[2,119],23:[2,119],49:[2,119]},{1:[2,120],6:[2,120],7:[2,120],10:[2,120],20:[2,120],22:[2,120],23:[2,120],49:[2,120]},{1:[2,121],6:[2,121],7:[2,121],10:[2,121],20:[2,121],22:[2,121],23:[2,121],49:[2,121]},{1:[2,122],6:[2,122],7:[2,122],10:[2,122],20:[2,122],22:[2,122],23:[2,122],49:[2,122]},{1:[2,123],6:[2,123],7:[2,123],10:[2,123],20:[2,123],22:[2,123],23:[2,123],49:[2,123]},{1:[2,124],6:[2,124],7:[2,124],10:[2,124],20:[2,124],22:[2,124],23:[2,124],49:[2,124]},{1:[2,125],6:[2,125],7:[2,125],10:[2,125],20:[2,125],22:[2,125],23:[2,125],49:[2,125]},{1:[2,126],6:[2,126],7:[2,126],10:[2,126],20:[2,126],22:[2,126],23:[2,126],49:[2,126]},{1:[2,127],6:[2,127],7:[2,127],10:[2,127],20:[2,127],22:[2,127],23:[2,127],49:[2,127]},{1:[2,128],6:[2,128],7:[2,128],10:[2,128],20:[2,128],22:[2,128],23:[2,128],49:[2,128]},{1:[2,129],6:[2,129],7:[2,129],10:[2,129],20:[2,129],22:[2,129],23:[2,129],49:[2,129]},{1:[2,130],6:[2,130],7:[2,130],10:[2,130],20:[2,130],22:[2,130],23:[2,130],49:[2,130]},{1:[2,131],6:[2,131],7:[2,131],10:[2,131],20:[2,131],22:[2,131],23:[2,131],49:[2,131]},{1:[2,132],6:[2,132],7:[2,132],10:[2,132],20:[2,132],22:[2,132],23:[2,132],49:[2,132]},{1:[2,133],6:[2,133],7:[2,133],10:[2,133],20:[2,133],22:[2,133],23:[2,133],49:[2,133]},{1:[2,134],6:[2,134],7:[2,134],10:[2,134],20:[2,134],22:[2,134],23:[2,134],49:[2,134]},{1:[2,135],6:[2,135],7:[2,135],10:[2,135],20:[2,135],22:[2,135],23:[2,135],49:[2,135]},{1:[2,136],6:[2,136],7:[2,136],10:[2,136],20:[2,136],22:[2,136],23:[2,136],49:[2,136]},{1:[2,137],6:[2,137],7:[2,137],10:[2,137],20:[2,137],22:[2,137],23:[2,137],49:[2,137]},{1:[2,138],6:[2,138],7:[2,138],10:[2,138],20:[2,138],22:[2,138],23:[2,138],49:[2,138]},{1:[2,139],6:[2,139],7:[2,139],10:[2,139],20:[2,139],22:[2,139],23:[2,139],49:[2,139]},{1:[2,140],6:[2,140],7:[2,140],10:[2,140],20:[2,140],22:[2,140],23:[2,140],49:[2,140]},{1:[2,141],6:[2,141],7:[2,141],10:[2,141],20:[2,141],22:[2,141],23:[2,141],49:[2,141]},{1:[2,142],6:[2,142],7:[2,142],10:[2,142],20:[2,142],22:[2,142],23:[2,142],49:[2,142]},{1:[2,143],6:[2,143],7:[2,143],10:[2,143],20:[2,143],22:[2,143],23:[2,143],49:[2,143]},{1:[2,144],6:[2,144],7:[2,144],10:[2,144],20:[2,144],22:[2,144],23:[2,144],49:[2,144]},{1:[2,145],6:[2,145],7:[2,145],10:[2,145],20:[2,145],22:[2,145],23:[2,145],49:[2,145]},{1:[2,146],6:[2,146],7:[2,146],10:[2,146],20:[2,146],22:[2,146],23:[2,146],49:[2,146]},{1:[2,147],6:[2,147],7:[2,147],10:[2,147],20:[2,147],22:[2,147],23:[2,147],49:[2,147]},{1:[2,148],6:[2,148],7:[2,148],10:[2,148],20:[2,148],22:[2,148],23:[2,148],49:[2,148]},{1:[2,149],6:[2,149],7:[2,149],10:[2,149],20:[2,149],22:[2,149],23:[2,149],49:[2,149]},{1:[2,150],6:[2,150],7:[2,150],10:[2,150],20:[2,150],22:[2,150],23:[2,150],49:[2,150]},{1:[2,151],6:[2,151],7:[2,151],10:[2,151],20:[2,151],22:[2,151],23:[2,151],49:[2,151]},{1:[2,152],6:[2,152],7:[2,152],10:[2,152],20:[2,152],22:[2,152],23:[2,152],49:[2,152]},{1:[2,153],6:[2,153],7:[2,153],10:[2,153],20:[2,153],22:[2,153],23:[2,153],49:[2,153]},{1:[2,154],6:[2,154],7:[2,154],10:[2,154],20:[2,154],22:[2,154],23:[2,154],49:[2,154]},{1:[2,155],6:[2,155],7:[2,155],10:[2,155],20:[2,155],22:[2,155],23:[2,155],49:[2,155]},{1:[2,156],6:[2,156],7:[2,156],10:[2,156],20:[2,156],22:[2,156],23:[2,156],49:[2,156]},{1:[2,157],6:[2,157],7:[2,157],10:[2,157],20:[2,157],22:[2,157],23:[2,157],49:[2,157]},{1:[2,158],6:[2,158],7:[2,158],10:[2,158],20:[2,158],22:[2,158],23:[2,158],49:[2,158]},{1:[2,159],6:[2,159],7:[2,159],10:[2,159],20:[2,159],22:[2,159],23:[2,159],49:[2,159]},{1:[2,160],6:[2,160],7:[2,160],10:[2,160],20:[2,160],22:[2,160],23:[2,160],49:[2,160]},{1:[2,161],6:[2,161],7:[2,161],10:[2,161],20:[2,161],22:[2,161],23:[2,161],49:[2,161]},{1:[2,162],6:[2,162],7:[2,162],10:[2,162],20:[2,162],22:[2,162],23:[2,162],49:[2,162]},{1:[2,163],6:[2,163],7:[2,163],10:[2,163],20:[2,163],22:[2,163],23:[2,163],49:[2,163]},{1:[2,164],6:[2,164],7:[2,164],10:[2,164],20:[2,164],22:[2,164],23:[2,164],49:[2,164]},{1:[2,165],6:[2,165],7:[2,165],10:[2,165],20:[2,165],22:[2,165],23:[2,165],49:[2,165]},{1:[2,166],6:[2,166],7:[2,166],10:[2,166],20:[2,166],22:[2,166],23:[2,166],49:[2,166]},{1:[2,167],6:[2,167],7:[2,167],10:[2,167],20:[2,167],22:[2,167],23:[2,167],49:[2,167]},{1:[2,168],6:[2,168],7:[2,168],10:[2,168],20:[2,168],22:[2,168],23:[2,168],49:[2,168]},{1:[2,169],6:[2,169],7:[2,169],10:[2,169],20:[2,169],22:[2,169],23:[2,169],49:[2,169]},{1:[2,170],6:[2,170],7:[2,170],10:[2,170],20:[2,170],22:[2,170],23:[2,170],49:[2,170]},{1:[2,171],6:[2,171],7:[2,171],10:[2,171],20:[2,171],22:[2,171],23:[2,171],49:[2,171]},{1:[2,172],6:[2,172],7:[2,172],10:[2,172],20:[2,172],22:[2,172],23:[2,172],49:[2,172]},{1:[2,173],6:[2,173],7:[2,173],10:[2,173],20:[2,173],22:[2,173],23:[2,173],49:[2,173]},{1:[2,174],6:[2,174],7:[2,174],10:[2,174],20:[2,174],22:[2,174],23:[2,174],49:[2,174]},{1:[2,175],6:[2,175],7:[2,175],10:[2,175],20:[2,175],22:[2,175],23:[2,175],49:[2,175]},{1:[2,176],6:[2,176],7:[2,176],10:[2,176],20:[2,176],22:[2,176],23:[2,176],49:[2,176]},{1:[2,177],6:[2,177],7:[2,177],10:[2,177],20:[2,177],22:[2,177],23:[2,177],49:[2,177]},{1:[2,178],6:[2,178],7:[2,178],10:[2,178],20:[2,178],22:[2,178],23:[2,178],49:[2,178]},{1:[2,179],6:[2,179],7:[2,179],10:[2,179],20:[2,179],22:[2,179],23:[2,179],49:[2,179]},{1:[2,180],6:[2,180],7:[2,180],10:[2,180],20:[2,180],22:[2,180],23:[2,180],49:[2,180]},{1:[2,181],6:[2,181],7:[2,181],10:[2,181],20:[2,181],22:[2,181],23:[2,181],49:[2,181]},{1:[2,182],6:[2,182],7:[2,182],10:[2,182],20:[2,182],22:[2,182],23:[2,182],49:[2,182]},{1:[2,183],6:[2,183],7:[2,183],10:[2,183],20:[2,183],22:[2,183],23:[2,183],49:[2,183]},{1:[2,184],6:[2,184],7:[2,184],10:[2,184],20:[2,184],22:[2,184],23:[2,184],49:[2,184]},{1:[2,185],6:[2,185],7:[2,185],10:[2,185],20:[2,185],22:[2,185],23:[2,185],49:[2,185]},{1:[2,186],6:[2,186],7:[2,186],10:[2,186],20:[2,186],22:[2,186],23:[2,186],49:[2,186]},{1:[2,187],6:[2,187],7:[2,187],10:[2,187],20:[2,187],22:[2,187],23:[2,187],49:[2,187]},{1:[2,188],6:[2,188],7:[2,188],10:[2,188],20:[2,188],22:[2,188],23:[2,188],49:[2,188]},{1:[2,189],6:[2,189],7:[2,189],10:[2,189],20:[2,189],22:[2,189],23:[2,189],49:[2,189]},{1:[2,190],6:[2,190],7:[2,190],10:[2,190],20:[2,190],22:[2,190],23:[2,190],49:[2,190]},{1:[2,191],6:[2,191],7:[2,191],10:[2,191],20:[2,191],22:[2,191],23:[2,191],49:[2,191]},{1:[2,192],6:[2,192],7:[2,192],10:[2,192],20:[2,192],22:[2,192],23:[2,192],49:[2,192]},{1:[2,193],6:[2,193],7:[2,193],10:[2,193],20:[2,193],22:[2,193],23:[2,193],49:[2,193]},{1:[2,194],6:[2,194],7:[2,194],10:[2,194],20:[2,194],22:[2,194],23:[2,194],49:[2,194]},{1:[2,195],6:[2,195],7:[2,195],10:[2,195],20:[2,195],22:[2,195],23:[2,195],49:[2,195]},{1:[2,196],6:[2,196],7:[2,196],10:[2,196],20:[2,196],22:[2,196],23:[2,196],49:[2,196]},{1:[2,197],6:[2,197],7:[2,197],10:[2,197],20:[2,197],22:[2,197],23:[2,197],49:[2,197]},{1:[2,198],6:[2,198],7:[2,198],10:[2,198],20:[2,198],22:[2,198],23:[2,198],49:[2,198]},{1:[2,199],6:[2,199],7:[2,199],10:[2,199],20:[2,199],22:[2,199],23:[2,199],49:[2,199]},{1:[2,200],6:[2,200],7:[2,200],10:[2,200],20:[2,200],22:[2,200],23:[2,200],49:[2,200]},{1:[2,201],6:[2,201],7:[2,201],10:[2,201],20:[2,201],22:[2,201],23:[2,201],49:[2,201]},{8:194,9:[1,41],10:[1,42],15:[1,195],19:193,21:196,24:197,25:[1,198],77:[1,57],78:[1,58],79:[1,59],80:[1,60],81:[1,61],82:[1,62],83:[1,63],84:[1,64],85:[1,65],86:[1,66],87:[1,67],88:[1,68],89:[1,69],90:[1,70],91:[1,71],92:[1,72],93:[1,73],94:[1,74],95:[1,75],96:[1,76],97:[1,77],98:[1,78],99:[1,79],100:[1,80],101:[1,81],102:[1,82],103:[1,83],104:[1,84],105:[1,85],106:[1,86],107:[1,87],108:[1,88],109:[1,89],110:[1,90],111:[1,91],112:[1,92],113:[1,93],114:[1,94],115:[1,95],116:[1,96],117:[1,97],118:[1,98],119:[1,99],120:[1,100],121:[1,101],122:[1,102],123:[1,103],124:[1,104],125:[1,105],126:[1,106],127:[1,107],128:[1,108],129:[1,109],130:[1,110],131:[1,111],132:[1,112],133:[1,113],134:[1,114],135:[1,115],136:[1,116],137:[1,117],138:[1,118],139:[1,119],140:[1,120],141:[1,121],142:[1,122],143:[1,123],144:[1,124],145:[1,125],146:[1,126],147:[1,127],148:[1,128],149:[1,129],150:[1,130],151:[1,131],152:[1,132],153:[1,133],154:[1,134],155:[1,135],156:[1,136],157:[1,137],158:[1,138],159:[1,139],160:[1,140],161:[1,141],162:[1,142],163:[1,143],164:[1,144],165:[1,145],166:[1,146],167:[1,147],168:[1,148],169:[1,149],170:[1,150],171:[1,151],172:[1,152],173:[1,153],174:[1,154],175:[1,155],176:[1,156],177:[1,157],178:[1,158],179:[1,159],180:[1,160],181:[1,161],182:[1,162]},{1:[2,10],6:[2,10],7:[2,10],10:[1,199],22:[1,200],23:[1,201],40:[1,202],41:[1,203],42:[1,204],49:[2,10]},{1:[2,50],6:[2,50],7:[2,50],10:[2,50],14:[1,205],22:[2,50],23:[2,50],40:[2,50],41:[2,50],42:[2,50],49:[2,50]},{1:[2,33],6:[2,33],7:[2,33],14:[1,206],49:[2,33]},{1:[2,14],6:[2,14],7:[2,14],49:[2,14]},{8:208,9:[1,41],10:[1,42],12:207,43:[1,168],45:[1,169],46:[1,170]},{1:[2,51],6:[2,51],7:[2,51],10:[2,51],22:[2,51],23:[2,51],40:[2,51],41:[2,51],42:[2,51],44:[2,51],49:[2,51]},{1:[2,52],6:[2,52],7:[2,52],10:[2,52],22:[2,52],23:[2,52],40:[2,52],41:[2,52],42:[2,52],44:[2,52],49:[2,52]},{1:[2,65],6:[2,65],7:[2,65]},{8:165,9:[1,41],10:[1,42],11:53,12:164,13:54,15:[1,166],16:[1,167],17:52,18:[1,163],24:51,26:46,27:55,28:[1,56],29:209,43:[1,168],45:[1,169],46:[1,170],77:[1,57],78:[1,58],79:[1,59],80:[1,60],81:[1,61],82:[1,62],83:[1,63],84:[1,64],85:[1,65],86:[1,66],87:[1,67],88:[1,68],89:[1,69],90:[1,70],91:[1,71],92:[1,72],93:[1,73],94:[1,74],95:[1,75],96:[1,76],97:[1,77],98:[1,78],99:[1,79],100:[1,80],101:[1,81],102:[1,82],103:[1,83],104:[1,84],105:[1,85],106:[1,86],107:[1,87],108:[1,88],109:[1,89],110:[1,90],111:[1,91],112:[1,92],113:[1,93],114:[1,94],115:[1,95],116:[1,96],117:[1,97],118:[1,98],119:[1,99],120:[1,100],121:[1,101],122:[1,102],123:[1,103],124:[1,104],125:[1,105],126:[1,106],127:[1,107],128:[1,108],129:[1,109],130:[1,110],131:[1,111],132:[1,112],133:[1,113],134:[1,114],135:[1,115],136:[1,116],137:[1,117],138:[1,118],139:[1,119],140:[1,120],141:[1,121],142:[1,122],143:[1,123],144:[1,124],145:[1,125],146:[1,126],147:[1,127],148:[1,128],149:[1,129],150:[1,130],151:[1,131],152:[1,132],153:[1,133],154:[1,134],155:[1,135],156:[1,136],157:[1,137],158:[1,138],159:[1,139],160:[1,140],161:[1,141],162:[1,142],163:[1,143],164:[1,144],165:[1,145],166:[1,146],167:[1,147],168:[1,148],169:[1,149],170:[1,150],171:[1,151],172:[1,152],173:[1,153],174:[1,154],175:[1,155],176:[1,156],177:[1,157],178:[1,158],179:[1,159],180:[1,160],181:[1,161],182:[1,162]},{9:[2,80],10:[2,80],15:[2,80],16:[2,80],18:[2,80],28:[2,80],43:[2,80],45:[2,80],46:[2,80],77:[2,80],78:[2,80],79:[2,80],80:[2,80],81:[2,80],82:[2,80],83:[2,80],84:[2,80],85:[2,80],86:[2,80],87:[2,80],88:[2,80],89:[2,80],90:[2,80],91:[2,80],92:[2,80],93:[2,80],94:[2,80],95:[2,80],96:[2,80],97:[2,80],98:[2,80],99:[2,80],100:[2,80],101:[2,80],102:[2,80],103:[2,80],104:[2,80],105:[2,80],106:[2,80],107:[2,80],108:[2,80],109:[2,80],110:[2,80],111:[2,80],112:[2,80],113:[2,80],114:[2,80],115:[2,80],116:[2,80],117:[2,80],118:[2,80],119:[2,80],120:[2,80],121:[2,80],122:[2,80],123:[2,80],124:[2,80],125:[2,80],126:[2,80],127:[2,80],128:[2,80],129:[2,80],130:[2,80],131:[2,80],132:[2,80],133:[2,80],134:[2,80],135:[2,80],136:[2,80],137:[2,80],138:[2,80],139:[2,80],140:[2,80],141:[2,80],142:[2,80],143:[2,80],144:[2,80],145:[2,80],146:[2,80],147:[2,80],148:[2,80],149:[2,80],150:[2,80],151:[2,80],152:[2,80],153:[2,80],154:[2,80],155:[2,80],156:[2,80],157:[2,80],158:[2,80],159:[2,80],160:[2,80],161:[2,80],162:[2,80],163:[2,80],164:[2,80],165:[2,80],166:[2,80],167:[2,80],168:[2,80],169:[2,80],170:[2,80],171:[2,80],172:[2,80],173:[2,80],174:[2,80],175:[2,80],176:[2,80],177:[2,80],178:[2,80],179:[2,80],180:[2,80],181:[2,80],182:[2,80]},{9:[2,81],10:[2,81],15:[2,81],16:[2,81],18:[2,81],28:[2,81],43:[2,81],45:[2,81],46:[2,81],77:[2,81],78:[2,81],79:[2,81],80:[2,81],81:[2,81],82:[2,81],83:[2,81],84:[2,81],85:[2,81],86:[2,81],87:[2,81],88:[2,81],89:[2,81],90:[2,81],91:[2,81],92:[2,81],93:[2,81],94:[2,81],95:[2,81],96:[2,81],97:[2,81],98:[2,81],99:[2,81],100:[2,81],101:[2,81],102:[2,81],103:[2,81],104:[2,81],105:[2,81],106:[2,81],107:[2,81],108:[2,81],109:[2,81],110:[2,81],111:[2,81],112:[2,81],113:[2,81],114:[2,81],115:[2,81],116:[2,81],117:[2,81],118:[2,81],119:[2,81],120:[2,81],121:[2,81],122:[2,81],123:[2,81],124:[2,81],125:[2,81],126:[2,81],127:[2,81],128:[2,81],129:[2,81],130:[2,81],131:[2,81],132:[2,81],133:[2,81],134:[2,81],135:[2,81],136:[2,81],137:[2,81],138:[2,81],139:[2,81],140:[2,81],141:[2,81],142:[2,81],143:[2,81],144:[2,81],145:[2,81],146:[2,81],147:[2,81],148:[2,81],149:[2,81],150:[2,81],151:[2,81],152:[2,81],153:[2,81],154:[2,81],155:[2,81],156:[2,81],157:[2,81],158:[2,81],159:[2,81],160:[2,81],161:[2,81],162:[2,81],163:[2,81],164:[2,81],165:[2,81],166:[2,81],167:[2,81],168:[2,81],169:[2,81],170:[2,81],171:[2,81],172:[2,81],173:[2,81],174:[2,81],175:[2,81],176:[2,81],177:[2,81],178:[2,81],179:[2,81],180:[2,81],181:[2,81],182:[2,81]},{10:[1,210],15:[2,60],22:[1,211],32:[2,60],47:[2,60],48:[2,60],51:[2,60],53:[2,60],54:[2,60],63:[2,60],64:[2,60],65:[2,60],66:[2,60],67:[2,60],68:[2,60],69:[2,60],70:[2,60],71:[2,60],72:[2,60],73:[2,60],74:[2,60],75:[2,60],76:[2,60]},{8:177,9:[1,41],10:[1,42],15:[1,180],39:212,43:[1,176],45:[1,178],46:[1,179]},{1:[2,56],6:[2,56],7:[2,56],10:[2,56],15:[2,56],22:[2,56],32:[2,56],44:[2,56],47:[2,56],48:[2,56],49:[2,56],51:[2,56],53:[2,56],54:[2,56],56:[2,56],63:[2,56],64:[2,56],65:[2,56],66:[2,56],67:[2,56],68:[2,56],69:[2,56],70:[2,56],71:[2,56],72:[2,56],73:[2,56],74:[2,56],75:[2,56],76:[2,56]},{1:[2,57],6:[2,57],7:[2,57],10:[2,57],15:[2,57],22:[2,57],32:[2,57],44:[2,57],47:[2,57],48:[2,57],49:[2,57],51:[2,57],53:[2,57],54:[2,57],56:[2,57],63:[2,57],64:[2,57],65:[2,57],66:[2,57],67:[2,57],68:[2,57],69:[2,57],70:[2,57],71:[2,57],72:[2,57],73:[2,57],74:[2,57],75:[2,57],76:[2,57]},{1:[2,58],6:[2,58],7:[2,58],10:[2,58],15:[2,58],22:[2,58],32:[2,58],44:[2,58],47:[2,58],48:[2,58],49:[2,58],51:[2,58],53:[2,58],54:[2,58],56:[2,58],63:[2,58],64:[2,58],65:[2,58],66:[2,58],67:[2,58],68:[2,58],69:[2,58],70:[2,58],71:[2,58],72:[2,58],73:[2,58],74:[2,58],75:[2,58],76:[2,58]},{1:[2,59],6:[2,59],7:[2,59],10:[2,59],15:[2,59],22:[2,59],32:[2,59],44:[2,59],47:[2,59],48:[2,59],49:[2,59],51:[2,59],53:[2,59],54:[2,59],56:[2,59],63:[2,59],64:[2,59],65:[2,59],66:[2,59],67:[2,59],68:[2,59],69:[2,59],70:[2,59],71:[2,59],72:[2,59],73:[2,59],74:[2,59],75:[2,59],76:[2,59]},{8:177,9:[1,41],10:[1,42],15:[1,180],39:213,43:[1,176],45:[1,178],46:[1,179]},{8:177,9:[1,41],10:[1,42],15:[1,180],39:214,43:[1,176],45:[1,178],46:[1,179]},{1:[2,69],6:[2,69],7:[2,69],8:177,9:[1,41],10:[1,42],15:[1,180],39:215,43:[1,176],45:[1,178],46:[1,179],49:[2,69],56:[2,69]},{1:[2,72],6:[2,72],7:[2,72],10:[1,210],22:[1,211],49:[2,72],56:[2,72]},{1:[2,7],6:[2,7],7:[2,7]},{1:[2,74],6:[2,74],7:[2,74],49:[2,74],56:[2,74]},{1:[2,75],6:[2,75],7:[2,75],49:[2,75],56:[2,75]},{1:[2,67],6:[2,67],7:[2,67]},{1:[2,9],6:[2,9],7:[2,9],10:[2,9],14:[2,9],15:[2,9],20:[2,9],22:[2,9],23:[2,9],32:[2,9],40:[2,9],41:[2,9],42:[2,9],44:[2,9],47:[2,9],48:[2,9],49:[2,9],51:[2,9],53:[2,9],54:[2,9],56:[2,9],63:[2,9],64:[2,9],65:[2,9],66:[2,9],67:[2,9],68:[2,9],69:[2,9],70:[2,9],71:[2,9],72:[2,9],73:[2,9],74:[2,9],75:[2,9],76:[2,9]},{1:[2,68],6:[2,68],7:[2,68]},{8:165,9:[1,41],10:[1,42],11:53,12:164,13:54,15:[1,166],16:[1,167],17:52,18:[1,163],24:51,26:217,27:55,28:[1,56],30:216,43:[1,168],45:[1,169],46:[1,170],77:[1,57],78:[1,58],79:[1,59],80:[1,60],81:[1,61],82:[1,62],83:[1,63],84:[1,64],85:[1,65],86:[1,66],87:[1,67],88:[1,68],89:[1,69],90:[1,70],91:[1,71],92:[1,72],93:[1,73],94:[1,74],95:[1,75],96:[1,76],97:[1,77],98:[1,78],99:[1,79],100:[1,80],101:[1,81],102:[1,82],103:[1,83],104:[1,84],105:[1,85],106:[1,86],107:[1,87],108:[1,88],109:[1,89],110:[1,90],111:[1,91],112:[1,92],113:[1,93],114:[1,94],115:[1,95],116:[1,96],117:[1,97],118:[1,98],119:[1,99],120:[1,100],121:[1,101],122:[1,102],123:[1,103],124:[1,104],125:[1,105],126:[1,106],127:[1,107],128:[1,108],129:[1,109],130:[1,110],131:[1,111],132:[1,112],133:[1,113],134:[1,114],135:[1,115],136:[1,116],137:[1,117],138:[1,118],139:[1,119],140:[1,120],141:[1,121],142:[1,122],143:[1,123],144:[1,124],145:[1,125],146:[1,126],147:[1,127],148:[1,128],149:[1,129],150:[1,130],151:[1,131],152:[1,132],153:[1,133],154:[1,134],155:[1,135],156:[1,136],157:[1,137],158:[1,138],159:[1,139],160:[1,140],161:[1,141],162:[1,142],163:[1,143],164:[1,144],165:[1,145],166:[1,146],167:[1,147],168:[1,148],169:[1,149],170:[1,150],171:[1,151],172:[1,152],173:[1,153],174:[1,154],175:[1,155],176:[1,156],177:[1,157],178:[1,158],179:[1,159],180:[1,160],181:[1,161],182:[1,162]},{49:[1,218]},{10:[1,221],20:[1,219],22:[1,220]},{10:[2,16],20:[2,16],22:[2,16]},{10:[2,17],20:[2,17],22:[2,17]},{10:[2,18],20:[2,18],22:[2,18],23:[1,222]},{10:[2,22],20:[2,22],22:[2,22],23:[2,22]},{10:[2,23],20:[2,23],22:[2,23],23:[2,23]},{8:208,9:[1,41],10:[1,42],12:223,43:[1,168],45:[1,169],46:[1,170]},{8:208,9:[1,41],10:[1,42],12:224,43:[1,168],45:[1,169],46:[1,170]},{8:208,9:[1,41],10:[1,42],12:225,43:[1,168],45:[1,169],46:[1,170]},{8:208,9:[1,41],10:[1,42],12:226,43:[1,168],45:[1,169],46:[1,170]},{8:208,9:[1,41],10:[1,42],12:227,43:[1,168],45:[1,169],46:[1,170]},{8:208,9:[1,41],10:[1,42],12:228,43:[1,168],45:[1,169],46:[1,170]},{8:229,9:[1,41],10:[1,42],15:[1,230]},{8:231,9:[1,41],10:[1,42]},{10:[1,199],22:[1,200],23:[1,201],40:[1,202],41:[1,203],42:[1,204],44:[1,232]},{1:[2,50],6:[2,50],7:[2,50],10:[2,50],22:[2,50],23:[2,50],40:[2,50],41:[2,50],42:[2,50],44:[2,50],49:[2,50]},{1:[2,66],6:[2,66],7:[2,66]},{8:177,9:[1,41],10:[1,42],15:[1,180],39:233,43:[1,176],45:[1,178],46:[1,179]},{8:177,9:[1,41],10:[1,42],15:[1,180],39:234,43:[1,176],45:[1,178],46:[1,179]},{10:[1,210],22:[1,211],44:[1,235]},{1:[2,42],6:[2,42],7:[2,42],10:[1,210],22:[1,211]},{1:[2,41],6:[2,41],7:[2,41],10:[1,210],22:[1,211]},{1:[2,71],6:[2,71],7:[2,71],10:[1,210],22:[1,211],49:[2,71],56:[2,71]},{1:[2,62],6:[2,62],7:[2,62]},{1:[2,31],6:[2,31],7:[2,31]},{8:165,9:[1,41],10:[1,42],11:53,12:164,13:54,15:[1,166],16:[1,167],17:52,18:[1,163],24:51,26:217,27:55,28:[1,56],30:236,43:[1,168],45:[1,169],46:[1,170],77:[1,57],78:[1,58],79:[1,59],80:[1,60],81:[1,61],82:[1,62],83:[1,63],84:[1,64],85:[1,65],86:[1,66],87:[1,67],88:[1,68],89:[1,69],90:[1,70],91:[1,71],92:[1,72],93:[1,73],94:[1,74],95:[1,75],96:[1,76],97:[1,77],98:[1,78],99:[1,79],100:[1,80],101:[1,81],102:[1,82],103:[1,83],104:[1,84],105:[1,85],106:[1,86],107:[1,87],108:[1,88],109:[1,89],110:[1,90],111:[1,91],112:[1,92],113:[1,93],114:[1,94],115:[1,95],116:[1,96],117:[1,97],118:[1,98],119:[1,99],120:[1,100],121:[1,101],122:[1,102],123:[1,103],124:[1,104],125:[1,105],126:[1,106],127:[1,107],128:[1,108],129:[1,109],130:[1,110],131:[1,111],132:[1,112],133:[1,113],134:[1,114],135:[1,115],136:[1,116],137:[1,117],138:[1,118],139:[1,119],140:[1,120],141:[1,121],142:[1,122],143:[1,123],144:[1,124],145:[1,125],146:[1,126],147:[1,127],148:[1,128],149:[1,129],150:[1,130],151:[1,131],152:[1,132],153:[1,133],154:[1,134],155:[1,135],156:[1,136],157:[1,137],158:[1,138],159:[1,139],160:[1,140],161:[1,141],162:[1,142],163:[1,143],164:[1,144],165:[1,145],166:[1,146],167:[1,147],168:[1,148],169:[1,149],170:[1,150],171:[1,151],172:[1,152],173:[1,153],174:[1,154],175:[1,155],176:[1,156],177:[1,157],178:[1,158],179:[1,159],180:[1,160],181:[1,161],182:[1,162]},{1:[2,15],6:[2,15],7:[2,15],49:[2,15]},{8:194,9:[1,41],10:[1,42],15:[1,195],19:237,21:196,24:197,25:[1,198],77:[1,57],78:[1,58],79:[1,59],80:[1,60],81:[1,61],82:[1,62],83:[1,63],84:[1,64],85:[1,65],86:[1,66],87:[1,67],88:[1,68],89:[1,69],90:[1,70],91:[1,71],92:[1,72],93:[1,73],94:[1,74],95:[1,75],96:[1,76],97:[1,77],98:[1,78],99:[1,79],100:[1,80],101:[1,81],102:[1,82],103:[1,83],104:[1,84],105:[1,85],106:[1,86],107:[1,87],108:[1,88],109:[1,89],110:[1,90],111:[1,91],112:[1,92],113:[1,93],114:[1,94],115:[1,95],116:[1,96],117:[1,97],118:[1,98],119:[1,99],120:[1,100],121:[1,101],122:[1,102],123:[1,103],124:[1,104],125:[1,105],126:[1,106],127:[1,107],128:[1,108],129:[1,109],130:[1,110],131:[1,111],132:[1,112],133:[1,113],134:[1,114],135:[1,115],136:[1,116],137:[1,117],138:[1,118],139:[1,119],140:[1,120],141:[1,121],142:[1,122],143:[1,123],144:[1,124],145:[1,125],146:[1,126],147:[1,127],148:[1,128],149:[1,129],150:[1,130],151:[1,131],152:[1,132],153:[1,133],154:[1,134],155:[1,135],156:[1,136],157:[1,137],158:[1,138],159:[1,139],160:[1,140],161:[1,141],162:[1,142],163:[1,143],164:[1,144],165:[1,145],166:[1,146],167:[1,147],168:[1,148],169:[1,149],170:[1,150],171:[1,151],172:[1,152],173:[1,153],174:[1,154],175:[1,155],176:[1,156],177:[1,157],178:[1,158],179:[1,159],180:[1,160],181:[1,161],182:[1,162]},{8:194,9:[1,41],10:[1,42],15:[1,195],19:238,21:196,24:197,25:[1,198],77:[1,57],78:[1,58],79:[1,59],80:[1,60],81:[1,61],82:[1,62],83:[1,63],84:[1,64],85:[1,65],86:[1,66],87:[1,67],88:[1,68],89:[1,69],90:[1,70],91:[1,71],92:[1,72],93:[1,73],94:[1,74],95:[1,75],96:[1,76],97:[1,77],98:[1,78],99:[1,79],100:[1,80],101:[1,81],102:[1,82],103:[1,83],104:[1,84],105:[1,85],106:[1,86],107:[1,87],108:[1,88],109:[1,89],110:[1,90],111:[1,91],112:[1,92],113:[1,93],114:[1,94],115:[1,95],116:[1,96],117:[1,97],118:[1,98],119:[1,99],120:[1,100],121:[1,101],122:[1,102],123:[1,103],124:[1,104],125:[1,105],126:[1,106],127:[1,107],128:[1,108],129:[1,109],130:[1,110],131:[1,111],132:[1,112],133:[1,113],134:[1,114],135:[1,115],136:[1,116],137:[1,117],138:[1,118],139:[1,119],140:[1,120],141:[1,121],142:[1,122],143:[1,123],144:[1,124],145:[1,125],146:[1,126],147:[1,127],148:[1,128],149:[1,129],150:[1,130],151:[1,131],152:[1,132],153:[1,133],154:[1,134],155:[1,135],156:[1,136],157:[1,137],158:[1,138],159:[1,139],160:[1,140],161:[1,141],162:[1,142],163:[1,143],164:[1,144],165:[1,145],166:[1,146],167:[1,147],168:[1,148],169:[1,149],170:[1,150],171:[1,151],172:[1,152],173:[1,153],174:[1,154],175:[1,155],176:[1,156],177:[1,157],178:[1,158],179:[1,159],180:[1,160],181:[1,161],182:[1,162]},{8:239,9:[1,41],10:[1,42]},{1:[2,43],6:[2,43],7:[2,43],10:[2,43],22:[2,43],23:[1,201],40:[1,202],41:[1,203],42:[1,204],44:[2,43],49:[2,43]},{1:[2,44],6:[2,44],7:[2,44],10:[2,44],22:[2,44],23:[1,201],40:[1,202],41:[1,203],42:[1,204],44:[2,44],49:[2,44]},{1:[2,45],6:[2,45],7:[2,45],10:[2,45],22:[2,45],23:[2,45],40:[2,45],41:[1,203],42:[1,204],44:[2,45],49:[2,45]},{1:[2,46],6:[2,46],7:[2,46],10:[2,46],22:[2,46],23:[2,46],40:[2,46],41:[1,203],42:[1,204],44:[2,46],49:[2,46]},{1:[2,47],6:[2,47],7:[2,47],10:[2,47],22:[2,47],23:[2,47],40:[2,47],41:[2,47],42:[2,47],44:[2,47],49:[2,47]},{1:[2,48],6:[2,48],7:[2,48],10:[2,48],22:[2,48],23:[2,48],40:[2,48],41:[2,48],42:[2,48],44:[2,48],49:[2,48]},{1:[2,11],6:[2,11],7:[2,11],49:[2,11]},{1:[2,12],6:[2,12],7:[2,12],49:[2,12]},{1:[2,13],6:[2,13],7:[2,13],49:[2,13]},{1:[2,49],6:[2,49],7:[2,49],10:[2,49],22:[2,49],23:[2,49],40:[2,49],41:[2,49],42:[2,49],44:[2,49],49:[2,49]},{1:[2,53],6:[2,53],7:[2,53],10:[2,53],15:[2,53],22:[2,53],32:[2,53],44:[2,53],47:[2,53],48:[2,53],49:[2,53],51:[2,53],53:[2,53],54:[2,53],56:[2,53],63:[2,53],64:[2,53],65:[2,53],66:[2,53],67:[2,53],68:[2,53],69:[2,53],70:[2,53],71:[2,53],72:[2,53],73:[2,53],74:[2,53],75:[2,53],76:[2,53]},{1:[2,54],6:[2,54],7:[2,54],10:[2,54],15:[2,54],22:[2,54],32:[2,54],44:[2,54],47:[2,54],48:[2,54],49:[2,54],51:[2,54],53:[2,54],54:[2,54],56:[2,54],63:[2,54],64:[2,54],65:[2,54],66:[2,54],67:[2,54],68:[2,54],69:[2,54],70:[2,54],71:[2,54],72:[2,54],73:[2,54],74:[2,54],75:[2,54],76:[2,54]},{1:[2,55],6:[2,55],7:[2,55],10:[2,55],15:[2,55],22:[2,55],32:[2,55],44:[2,55],47:[2,55],48:[2,55],49:[2,55],51:[2,55],53:[2,55],54:[2,55],56:[2,55],63:[2,55],64:[2,55],65:[2,55],66:[2,55],67:[2,55],68:[2,55],69:[2,55],70:[2,55],71:[2,55],72:[2,55],73:[2,55],74:[2,55],75:[2,55],76:[2,55]},{1:[2,63],6:[2,63],7:[2,63]},{10:[2,19],20:[2,19],22:[2,19]},{10:[2,20],20:[2,20],22:[2,20]},{22:[1,240]},{8:194,9:[1,41],10:[1,42],15:[1,195],19:241,21:196,24:197,25:[1,198],77:[1,57],78:[1,58],79:[1,59],80:[1,60],81:[1,61],82:[1,62],83:[1,63],84:[1,64],85:[1,65],86:[1,66],87:[1,67],88:[1,68],89:[1,69],90:[1,70],91:[1,71],92:[1,72],93:[1,73],94:[1,74],95:[1,75],96:[1,76],97:[1,77],98:[1,78],99:[1,79],100:[1,80],101:[1,81],102:[1,82],103:[1,83],104:[1,84],105:[1,85],106:[1,86],107:[1,87],108:[1,88],109:[1,89],110:[1,90],111:[1,91],112:[1,92],113:[1,93],114:[1,94],115:[1,95],116:[1,96],117:[1,97],118:[1,98],119:[1,99],120:[1,100],121:[1,101],122:[1,102],123:[1,103],124:[1,104],125:[1,105],126:[1,106],127:[1,107],128:[1,108],129:[1,109],130:[1,110],131:[1,111],132:[1,112],133:[1,113],134:[1,114],135:[1,115],136:[1,116],137:[1,117],138:[1,118],139:[1,119],140:[1,120],141:[1,121],142:[1,122],143:[1,123],144:[1,124],145:[1,125],146:[1,126],147:[1,127],148:[1,128],149:[1,129],150:[1,130],151:[1,131],152:[1,132],153:[1,133],154:[1,134],155:[1,135],156:[1,136],157:[1,137],158:[1,138],159:[1,139],160:[1,140],161:[1,141],162:[1,142],163:[1,143],164:[1,144],165:[1,145],166:[1,146],167:[1,147],168:[1,148],169:[1,149],170:[1,150],171:[1,151],172:[1,152],173:[1,153],174:[1,154],175:[1,155],176:[1,156],177:[1,157],178:[1,158],179:[1,159],180:[1,160],181:[1,161],182:[1,162]},{10:[2,21],20:[2,21],22:[2,21]}],
defaultActions: {},
parseError: function parseError(str, hash) {
    throw new Error(str);
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == "undefined")
        this.lexer.yylloc = {};
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === "function")
        this.parseError = this.yy.parseError;
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || 1;
        if (typeof token !== "number") {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == "undefined") {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
        if (typeof action === "undefined" || !action.length || !action[0]) {
            var errStr = "";
            if (!recovering) {
                expected = [];
                for (p in table[state])
                    if (this.terminals_[p] && p > 2) {
                        expected.push("'" + this.terminals_[p] + "'");
                    }
                if (this.lexer.showPosition) {
                    errStr = "Parse error on line " + (yylineno + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'";
                } else {
                    errStr = "Parse error on line " + (yylineno + 1) + ": Unexpected " + (symbol == 1?"end of input":"'" + (this.terminals_[symbol] || symbol) + "'");
                }
                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});
            }
        }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0)
                    recovering--;
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};
            if (ranges) {
                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== "undefined") {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}
};
 
  if (typeof exports !== 'undefined') {
    var Int = require(__dirname+'/hex.js').Hex;  
    var Opcode = require(__dirname+'/opcode.js').Opcode;
  } else {
    // At browser we have many functions and libs already defined (because of the file bundle)    
    var Opcode = window.Opcode;
    var Int = window.Hex;
  }

  /* Error function */
  function pError(err) {
    Opcode.error(err);
    // lexer.parseError(err);
  }  
/* Jison generated lexer */
var lexer = (function(){
var lexer = ({EOF:1,
parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },
setInput:function (input) {
        this._input = input;
        this._more = this._less = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};
        if (this.options.ranges) this.yylloc.range = [0,0];
        this.offset = 0;
        return this;
    },
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) this.yylloc.range[1]++;

        this._input = this._input.slice(1);
        return ch;
    },
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length-1);
        this.matched = this.matched.substr(0, this.matched.length-1);

        if (lines.length-1) this.yylineno -= lines.length-1;
        var r = this.yylloc.range;

        this.yylloc = {first_line: this.yylloc.first_line,
          last_line: this.yylineno+1,
          first_column: this.yylloc.first_column,
          last_column: lines ?
              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:
              this.yylloc.first_column - len
          };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        return this;
    },
more:function () {
        this._more = true;
        return this;
    },
less:function (n) {
        this.unput(this.match.slice(n));
    },
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\n/g, "");
    },
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c+"^";
    },
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) this.done = true;

        var token,
            match,
            tempMatch,
            index,
            col,
            lines;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i=0;i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (!this.options.flex) break;
            }
        }
        if (match) {
            lines = match[0].match(/(?:\r\n?|\n).*/g);
            if (lines) this.yylineno += lines.length;
            this.yylloc = {first_line: this.yylloc.last_line,
                           last_line: this.yylineno+1,
                           first_column: this.yylloc.last_column,
                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length};
            this.yytext += match[0];
            this.match += match[0];
            this.matches = match;
            this.yyleng = this.yytext.length;
            if (this.options.ranges) {
                this.yylloc.range = [this.offset, this.offset += this.yyleng];
            }
            this._more = false;
            this._input = this._input.slice(match[0].length);
            this.matched += match[0];
            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);
            if (this.done && this._input) this.done = false;
            if (token) return token;
            else return;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\n'+this.showPosition(),
                    {text: "", token: null, line: this.yylineno});
        }
    },
lex:function lex() {
        var r = this.next();
        if (typeof r !== 'undefined') {
            return r;
        } else {
            return this.lex();
        }
    },
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },
popState:function popState() {
        return this.conditionStack.pop();
    },
_currentRules:function _currentRules() {
        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;
    },
topState:function () {
        return this.conditionStack[this.conditionStack.length-2];
    },
pushState:function begin(condition) {
        this.begin(condition);
    }});
lexer.options = {};
lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {

var YYSTATE=YY_START
switch($avoiding_name_collisions) {
case 0: /* skip whitespace */ 
break;
case 1: /* skip comment */ 
break;
case 2: yy.freshLine = true; return 6; 
break;
case 3: return 49; 
break;
case 4: return 22; 
break;
case 5: return 10; 
break;
case 6: return 23; 
break;
case 7: return 40; 
break;
case 8: return 41; 
break;
case 9: return 42; 
break;
case 10: return 9; 
break;
case 11: return 9; 
break;
case 12: return 9; 
break;
case 13: return 9; 
break;
case 14: return 7; 
break;
case 15: return 53 
break;
case 16: return 54 
break;
case 17: return 18; 
break;
case 18: return 20; 
break;
case 19: return 43; 
break;
case 20: return 44; 
break;
case 21: return 46; 
break;
case 22: return 45; 
break;
case 23: return 77; 
break;
case 24: return 80; 
break;
case 25: return 78; 
break;
case 26: return 79; 
break;
case 27: return 81; 
break;
case 28: return 84; 
break;
case 29: return 82; 
break;
case 30: return 83; 
break;
case 31: return 85; 
break;
case 32: return 88; 
break;
case 33: return 86; 
break;
case 34: return 87; 
break;
case 35: return 89; 
break;
case 36: return 90; 
break;
case 37: return 91; 
break;
case 38: return 92; 
break;
case 39: return 93; 
break;
case 40: return 96; 
break;
case 41: return 94; 
break;
case 42: return 95; 
break;
case 43: return 97; 
break;
case 44: return 98; 
break;
case 45: return 99; 
break;
case 46: return 100; 
break;
case 47: return 101; 
break;
case 48: return 104; 
break;
case 49: return 102; 
break;
case 50: return 103; 
break;
case 51: return 105; 
break;
case 52: return 106; 
break;
case 53: return 107; 
break;
case 54: return 108; 
break;
case 55: return 109; 
break;
case 56: return 110; 
break;
case 57: return 111; 
break;
case 58: return 112; 
break;
case 59: return 113; 
break;
case 60: return 114; 
break;
case 61: return 115; 
break;
case 62: return 116; 
break;
case 63: return 117; 
break;
case 64: return 118; 
break;
case 65: return 119; 
break;
case 66: return 120; 
break;
case 67: return 121; 
break;
case 68: return 122; 
break;
case 69: return 123; 
break;
case 70: return 124; 
break;
case 71: return 125; 
break;
case 72: return 'REG_DR7'; 
break;
case 73: return 25; 
break;
case 74: return 127; 
break;
case 75: return 128; 
break;
case 76: return 129; 
break;
case 77: return 130; 
break;
case 78: return 131; 
break;
case 79: return 132; 
break;
case 80: return 133; 
break;
case 81: return 134; 
break;
case 82: return 135; 
break;
case 83: return 136; 
break;
case 84: return 137; 
break;
case 85: return 138; 
break;
case 86: return 139; 
break;
case 87: return 140; 
break;
case 88: return 141; 
break;
case 89: return 142; 
break;
case 90: return 143; 
break;
case 91: return 144; 
break;
case 92: return 145; 
break;
case 93: return 146; 
break;
case 94: return 147; 
break;
case 95: return 148; 
break;
case 96: return 149; 
break;
case 97: return 150; 
break;
case 98: return 151; 
break;
case 99: return 152; 
break;
case 100: return 153; 
break;
case 101: return 154; 
break;
case 102: return 155; 
break;
case 103: return 156; 
break;
case 104: return 157; 
break;
case 105: return 158; 
break;
case 106: return 159; 
break;
case 107: return 160; 
break;
case 108: return 161; 
break;
case 109: return 162; 
break;
case 110: return 163; 
break;
case 111: return 164; 
break;
case 112: return 165; 
break;
case 113: return 166; 
break;
case 114: return 167; 
break;
case 115: return 168; 
break;
case 116: return 169; 
break;
case 117: return 170; 
break;
case 118: return 171; 
break;
case 119: return 172; 
break;
case 120: return 173; 
break;
case 121: return 174; 
break;
case 122: return 175; 
break;
case 123: return 176; 
break;
case 124: return 177; 
break;
case 125: return 178; 
break;
case 126: return 179; 
break;
case 127: return 180; 
break;
case 128: return 181; 
break;
case 129: return 182; 
break;
case 130: return 57; 
break;
case 131: return 58; 
break;
case 132: return 59; 
break;
case 133: return 60; 
break;
case 134: return 61; 
break;
case 135: return 62; 
break;
case 136: return 63; 
break;
case 137: return 64; 
break;
case 138: return 65; 
break;
case 139: return 66; 
break;
case 140: return 67; 
break;
case 141: return 68; 
break;
case 142: return 69; 
break;
case 143: return 70; 
break;
case 144: return 71; 
break;
case 145: return 72; 
break;
case 146: return 73; 
break;
case 147: return 74; 
break;
case 148: return 75; 
break;
case 149: return 76; 
break;
case 150: return 47 
break;
case 151: return 38 
break;
case 152: return 56; 
break;
case 153: return 56; 
break;
case 154: return 16; 
break;
case 155: return 32; 
break;
case 156: return 48; 
break;
case 157: return 51; 
break;
case 158: return 15; 
break;
case 159: return 14 
break;
}
};
lexer.rules = [/^(?:[ \t\r\f\v])/,/^(?:;.*)/,/^(?:\n+)/,/^(?:,)/,/^(?:\+)/,/^(?:-)/,/^(?:\*)/,/^(?:\/)/,/^(?:<<)/,/^(?:>>)/,/^(?:0x[0-9a-fA-F]+)/,/^(?:0[0-9a-fA-F]+h\b)/,/^(?:[0-1]+b\b)/,/^(?:\d+)/,/^(?:$)/,/^(?:\[([ ]+|)org\b)/,/^(?:\[([ ]+|)bits\b)/,/^(?:\[)/,/^(?:\])/,/^(?:\()/,/^(?:\))/,/^(?:\$\$)/,/^(?:\$)/,/^(?:al\b)/,/^(?:bl\b)/,/^(?:cl\b)/,/^(?:dl\b)/,/^(?:ah\b)/,/^(?:bh\b)/,/^(?:ch\b)/,/^(?:dh\b)/,/^(?:ax\b)/,/^(?:bx\b)/,/^(?:cx\b)/,/^(?:dx\b)/,/^(?:sp\b)/,/^(?:bp\b)/,/^(?:si\b)/,/^(?:di\b)/,/^(?:eax\b)/,/^(?:ebx\b)/,/^(?:ecx\b)/,/^(?:edx\b)/,/^(?:esp\b)/,/^(?:ebp\b)/,/^(?:esi\b)/,/^(?:edi\b)/,/^(?:rax\b)/,/^(?:rbx\b)/,/^(?:rcx\b)/,/^(?:rdx\b)/,/^(?:rsp\b)/,/^(?:rbp\b)/,/^(?:rsi\b)/,/^(?:rdi\b)/,/^(?:es\b)/,/^(?:cs\b)/,/^(?:ss\b)/,/^(?:ds\b)/,/^(?:fs\b)/,/^(?:gs\b)/,/^(?:cr0\b)/,/^(?:cr2\b)/,/^(?:cr3\b)/,/^(?:cr4\b)/,/^(?:dr0\b)/,/^(?:dr1\b)/,/^(?:dr2\b)/,/^(?:dr3\b)/,/^(?:dr4\b)/,/^(?:dr5\b)/,/^(?:dr6\b)/,/^(?:dr7\b)/,/^(?:rip\b)/,/^(?:r8b\b)/,/^(?:r9b\b)/,/^(?:r10b\b)/,/^(?:r11b\b)/,/^(?:r12b\b)/,/^(?:r13b\b)/,/^(?:r14b\b)/,/^(?:r15b\b)/,/^(?:r8w\b)/,/^(?:r9w\b)/,/^(?:r10w\b)/,/^(?:r11w\b)/,/^(?:r12w\b)/,/^(?:r13w\b)/,/^(?:r14w\b)/,/^(?:r15w\b)/,/^(?:r8d\b)/,/^(?:r9d\b)/,/^(?:r10d\b)/,/^(?:r11d\b)/,/^(?:r12d\b)/,/^(?:r13d\b)/,/^(?:r14d\b)/,/^(?:r15d\b)/,/^(?:r8\b)/,/^(?:r9\b)/,/^(?:r10\b)/,/^(?:r11\b)/,/^(?:r12\b)/,/^(?:r13\b)/,/^(?:r14\b)/,/^(?:r15\b)/,/^(?:mm0\b)/,/^(?:mm1\b)/,/^(?:mm2\b)/,/^(?:mm3\b)/,/^(?:mm4\b)/,/^(?:mm5\b)/,/^(?:mm6\b)/,/^(?:mm7\b)/,/^(?:xmm0\b)/,/^(?:xmm1\b)/,/^(?:xmm2\b)/,/^(?:xmm3\b)/,/^(?:xmm4\b)/,/^(?:xmm5\b)/,/^(?:xmm6\b)/,/^(?:xmm7\b)/,/^(?:xmm8\b)/,/^(?:xmm9\b)/,/^(?:xmm10\b)/,/^(?:xmm11\b)/,/^(?:xmm12\b)/,/^(?:xmm13\b)/,/^(?:xmm14\b)/,/^(?:xmm15\b)/,/^(?:byte\b)/,/^(?:word\b)/,/^(?:dword\b)/,/^(?:qword\b)/,/^(?:near\b)/,/^(?:short\b)/,/^(?:db\b)/,/^(?:dw\b)/,/^(?:dd\b)/,/^(?:dq\b)/,/^(?:dt\b)/,/^(?:ddq\b)/,/^(?:do\b)/,/^(?:resb\b)/,/^(?:resw\b)/,/^(?:resd\b)/,/^(?:resq\b)/,/^(?:rest\b)/,/^(?:resdq\b)/,/^(?:reso\b)/,/^(?:times\b)/,/^(?:(equ|EQU))/,/^(?:".*")/,/^(?:'.*')/,/^(?:[\.0-9a-zA-Z_-]+:[0-9a-zA-Z_-]+)/,/^(?:[\.0-9a-zA-Z_-]+:)/,/^(?:\b(add|push|pop|or|adc|sbb|and|daa|sub|das|xor|aaa|cmp|aas|inc|dec|pusha|pushad|popa|popad|bound|arpl|movsxd|imul|ins|insb|insw|insd|outs|outsb|outsw|outsd|test|xchg|mov|lea|nop|pause|cbw|cwde|cdqe|cwd|cdq|cqo|callf|fwait|wait|pushf|pushfd|pushfq|popf|popfd|popfq|sahf|lahf|movs|movsb|movsw|movsd|movsq|cmps|cmpsb|cmpsw|cmpsd|cmpsq|stos|stosb|stosw|stosd|stosq|lods|lodsb|lodsw|lodsd|lodsq|scas|scasb|scasw|scasd|scasq|rol|ror|rcl|rcr|shl|sal|shr|sar|retn|les|lds|enter|leave|retf|int|into|iret|iretd|iretq|aam|aad|salc|setalc|xlat|xlatb|fadd|fmul|fcom|fcomp|fsub|fsubr|fdiv|fdivr|fld|fxch|fst|fnop|fstp|fldenv|fchs|fabs|ftst|fxam|fldcw|fld1|fldl2t|fldl2e|fldpi|fldlg2|fldln2|fldz|fnstenv|fstenv|f2xm1|fyl2x|fptan|fpatan|fxtract|fprem1|fdecstp|fincstp|fnstcw|fstcw|fprem|fyl2xp1|fsqrt|fsincos|frndint|fscale|fsin|fcos|fiadd|fcmovb|fimul|fcmove|ficom|fcmovbe|ficomp|fcmovu|fisub|fisubr|fucompp|fidiv|fidivr|fild|fcmovnb|fisttp|fcmovne|fist|fcmovnbe|fistp|fcmovnu|fneni|feni|fndisi|fdisi|fnclex|fclex|fninit|finit|fnsetpm|fsetpm|fucomi|fcomi|ffree|frstor|fucom|fucomp|fnsave|fsave|fnstsw|fstsw|faddp|fmulp|fcompp|fsubrp|fsubp|fdivrp|fdivp|fbld|fucomip|fbstp|fcomip|in|out|call|lock|int1|icebp|repnz|repne|rep|repz|repe|hlt|cmc|not|neg|mul|div|idiv|clc|stc|cli|sti|cld|std|sldt|str|lldt|ltr|verr|verw|jmpe|sgdt|vmcall|vmlaunch|vmresume|vmxoff|sidt|monitor|mwait|lgdt|xgetbv|xsetbv|lidt|smsw|lmsw|invlpg|swapgs|rdtscp|lar|lsl|loadall|syscall|clts|sysret|invd|wbinvd|ud2|movups|movss|movupd|movhlps|movlps|movlpd|movddup|movsldup|unpcklps|unpcklpd|unpckhps|unpckhpd|movlhps|movhps|movhpd|movshdup|hint_nop|prefetchnta|prefetcht0|prefetcht1|prefetcht2|movaps|movapd|cvtpi2ps|cvtsi2ss|cvtpi2pd|cvtsi2sd|movntps|movntpd|cvttps2pi|cvttss2si|cvttpd2pi|cvttsd2si|cvtps2pi|cvtss2si|cvtpd2pi|cvtsd2si|ucomiss|ucomisd|comiss|comisd|wrmsr|rdtsc|rdmsr|rdpmc|sysenter|sysexit|getsec|pshufb|phaddw|phaddd|phaddsw|pmaddubsw|phsubw|phsubd|phsubsw|psignb|psignw|psignd|pmulhrsw|pblendvb|blendvps|blendvpd|ptest|pabsb|pabsw|pabsd|pmovsxbw|pmovsxbd|pmovsxbq|pmovsxwd|pmovsxwq|pmovsxdq|pmuldq|pcmpeqq|movntdqa|packusdw|pmovzxbw|pmovzxbd|pmovzxbq|pmovzxwd|pmovzxwq|pmovzxdq|pcmpgtq|pminsb|pminsd|pminuw|pminud|pmaxsb|pmaxsd|pmaxuw|pmaxud|pmulld|phminposuw|invept|invvpid|movbe|crc32|roundps|roundpd|roundss|roundsd|blendps|blendpd|pblendw|palignr|pextrb|pextrw|pextrd|pextrq|extractps|pinsrb|insertps|pinsrd|pinsrq|dpps|dppd|mpsadbw|pcmpestrm|pcmpestri|pcmpistrm|pcmpistri|cmovo|cmovno|cmovb|cmovnae|cmovc|cmovnb|cmovae|cmovnc|cmovz|cmove|cmovnz|cmovne|cmovbe|cmovna|cmovnbe|cmova|cmovs|cmovns|cmovp|cmovpe|cmovnp|cmovpo|cmovl|cmovnge|cmovnl|cmovge|cmovle|cmovng|cmovnle|cmovg|movmskps|movmskpd|sqrtps|sqrtss|sqrtpd|sqrtsd|rsqrtps|rsqrtss|rcpps|rcpss|andps|andpd|andnps|andnpd|orps|orpd|xorps|xorpd|addps|addss|addpd|addsd|mulps|mulss|mulpd|mulsd|cvtps2pd|cvtpd2ps|cvtss2sd|cvtsd2ss|cvtdq2ps|cvtps2dq|cvttps2dq|subps|subss|subpd|subsd|minps|minss|minpd|minsd|divps|divss|divpd|divsd|maxps|maxss|maxpd|maxsd|punpcklbw|punpcklwd|punpckldq|packsswb|pcmpgtb|pcmpgtw|pcmpgtd|packuswb|punpckhbw|punpckhwd|punpckhdq|packssdw|punpcklqdq|punpckhqdq|movd|movq|movdqa|movdqu|pshufw|pshuflw|pshufhw|pshufd|psrlw|psraw|psllw|psrld|psrad|pslld|psrlq|psrldq|psllq|pslldq|pcmpeqb|pcmpeqw|pcmpeqd|emms|vmread|vmwrite|haddpd|haddps|hsubpd|hsubps|seto|setno|setb|setnae|setc|setnb|setae|setnc|setz|sete|setnz|setne|setbe|setna|setnbe|seta|sets|setns|setp|setpe|setnp|setpo|setl|setnge|setnl|setge|setle|setng|setnle|setg|cpuid|bt|shld|rsm|bts|shrd|fxsave|fxrstor|ldmxcsr|stmxcsr|xsave|lfence|xrstor|mfence|sfence|clflush|cmpxchg|lss|btr|lfs|lgs|movzx|popcnt|btc|bsf|bsr|movsx|xadd|cmpps|cmpss|cmppd|movnti|pinsrw|shufps|shufpd|cmpxchg8b|cmpxchg16b|vmptrld|vmclear|vmxon|vmptrst|bswap|addsubpd|addsubps|paddq|pmullw|movq2dq|movdq2q|pmovmskb|psubusb|psubusw|pminub|pand|paddusb|paddusw|pmaxub|pandn|pavgb|pavgw|pmulhuw|pmulhw|cvtpd2dq|cvttpd2dq|cvtdq2pd|movntq|movntdq|psubsb|psubsw|pminsw|por|paddsb|paddsw|pmaxsw|pxor|lddqu|pmuludq|pmaddwd|psadbw|maskmovq|maskmovdqu|psubb|psubw|psubd|psubq|paddb|paddw|paddd|ret)\b)/,/^(?:\b(jo|jno|jb|jnae|jc|jnb|jae|jnc|jz|je|jnz|jne|jbe|jna|jnbe|ja|js|jns|jp|jpe|jnp|jpo|jl|jnge|jnl|jge|jle|jng|jnle|jg|loopnz|loopne|loopz|loope|loop|jcxz|jecxz|jrcxz|jmp|jmpf)\b)/,/^(?:[\.0-9a-zA-Z_-]+)/,/^(?::)/];
lexer.conditions = {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"inclusive":true}};
return lexer;})()
parser.lexer = lexer;function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();
if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = pasm;
exports.Parser = pasm.Parser;
exports.parse = function () { return pasm.parse.apply(pasm, arguments); }
exports.main = function commonjsMain(args) {
    if (!args[1])
        throw new Error('Usage: '+args[0]+' FILE');
    var source, cwd;
    if (typeof process !== 'undefined') {
        source = require('fs').readFileSync(require('path').resolve(args[1]), "utf8");
    } else {
        source = require("file").path(require("file").cwd()).join(args[1]).read({charset: "utf-8"});
    }
    return exports.parser.parse(source);
}
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require("system").args);
}
}